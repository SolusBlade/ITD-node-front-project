{"version":3,"file":"static/js/869.2e24ff34.chunk.js","mappings":"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","sources":["webpack://ITD-node-front-project/./src/components/Header/Header.module.scss?6eb7","webpack://ITD-node-front-project/./src/components/Header/SelectTheme/SelectTheme.module.scss?dc9e","components/Header/SelectTheme/OutsideClicker.jsx","components/Header/SelectTheme/SelectTheme.jsx","webpack://ITD-node-front-project/./src/components/Header/Profile/Profile.module.scss?b4dd","components/Header/Profile/Profile.jsx","webpack://ITD-node-front-project/./src/components/Header/ProfileModal/ProfileModal.module.scss?9b06","components/Header/ProfileModal/ProfileModal.jsx","services/themes.js","components/Header/Header.jsx","webpack://ITD-node-front-project/./src/components/LogoComponent/LogoComponent.module.scss?f9d9","components/LogoComponent/LogoComponent.jsx","components/Forms/NewBoardAndEditBoard/NewBoardForm.jsx","webpack://ITD-node-front-project/./src/components/Forms/NeedHelp/NeedHelp.module.scss?7fbf","components/Forms/NeedHelp/NeedHelp.jsx","webpack://ITD-node-front-project/./src/components/Sidebar/Sidebar.module.scss?60bc","components/Forms/NewBoardAndEditBoard/EditBoard.jsx","components/Sidebar/Sidebar.jsx","webpack://ITD-node-front-project/./src/components/Bord/WelcomePageBoard/WelcomePageBoard.module.scss?27ac","components/Bord/WelcomePageBoard/WelcomePageBoard.jsx","webpack://ITD-node-front-project/./src/pages/HomePage/HomePage.module.scss?bae6","pages/HomePage/HomePage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"header\":\"Header_header__OKWO7\",\"container\":\"Header_container__TsUVY\",\"menu\":\"Header_menu__iSxy+\",\"icon\":\"Header_icon__a8FkJ\",\"modalContainer\":\"Header_modalContainer__GF0jM\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"SelectTheme_container__r7-AJ\",\"select\":\"SelectTheme_select__8wmg7\",\"selectContainer\":\"SelectTheme_selectContainer__7WLE1\",\"header\":\"SelectTheme_header__ZvlpG\",\"icon\":\"SelectTheme_icon__R1psC\",\"rotate\":\"SelectTheme_rotate__dNDwZ\",\"svg\":\"SelectTheme_svg__Hjzi-\",\"list\":\"SelectTheme_list__DAEHj\",\"active\":\"SelectTheme_active__l-6bo\",\"listItem\":\"SelectTheme_listItem__J0eR1\",\"current\":\"SelectTheme_current__DFjtF\"};","import React, { useEffect, useRef } from \"react\";\n\nexport function OutsideClicker(props) {\n  const wrapperRef = useRef(null);\n  // eslint-disable-next-line\n  let { isActive, setActive } = props;\n\n  function useOutsideAlerter(ref) {\n    useEffect(() => {\n      function handleClickOutside(event) {\n        if (ref.current && !ref.current.contains(event.target)) {\n            setActive((isActive = false));\n        }\n      }\n      document.addEventListener('mousedown', handleClickOutside);\n      return () => {\n        document.removeEventListener('mousedown', handleClickOutside);\n      };\n    }, [ref]);\n  }\n\n  useOutsideAlerter(wrapperRef);\n\n  return <div ref={wrapperRef}>{props.children}</div>;\n}","import clsx from 'clsx';\nimport css from './SelectTheme.module.scss';\nimport { useState } from \"react\";\nimport './SelectTheme.module.scss';\nimport sprite from '../../../assets/icons/icons.svg';\nimport { OutsideClicker } from './OutsideClicker';\n// import { selectTheme } from 'redux/auth/authSelectors';\n\nexport const SelectTheme = ({selectHandler, userTheme, setSelectedTheme}) => {\n    const [isActive, setActive] = useState(false);\n    // const storedTheme = useSelector(selectTheme);\n    \n    const handleClick = (event) => {\n        const evtParent = event.currentTarget.parentElement;\n        evtParent.children[1].classList.toggle('active');\n        evtParent.children[0].children[1].classList.toggle('rotate');\n        \n        setActive(!isActive);\n    }\n\n    const handleSelect = (event) => {\n        const theme = event.target.innerText.toLowerCase();\n        setSelectedTheme(theme);\n        selectHandler(theme);\n    }\n\n    const themeCheckHandler = () => {\n        return userTheme.length === 0 ? 'dark' : userTheme;\n    }\n\n    return (\n        <OutsideClicker isActive={isActive} setActive={setActive}>\n            <div className={css.container}>   \n                <div className={css.select}>\n                    <div className={css.selectContainer} onClick={handleClick}>\n                        <p className={css.header}>Theme</p>\n                        <div className={clsx(css.icon, [isActive && css.rotate])}>\n                            <svg className={css.svg}>\n                                <use href={sprite + '#icon-arrow-down'}></use>\n                            </svg>\n                        </div>\n                    </div>\n                    \n                    <ul className={clsx(css.list, [isActive && css.active])} \n                        onClick={event => {\n                            handleClick(event);\n                            handleSelect(event);\n                    }}>\n                        <li key={1} className={clsx({\n                            [css.listItem] : true,\n                            [css.current] : isActive && themeCheckHandler() === 'light'\n                        })}>\n                            <p>Light</p>\n                        </li>\n                        <li key={2} className={clsx({\n                            [css.listItem] : true,\n                            [css.current] : isActive && themeCheckHandler() === 'dark'\n                        })}>\n                            <p>Dark</p>\n                        </li>\n                        <li key={3} className={clsx({\n                            [css.listItem] : true,\n                            [css.current] : isActive && themeCheckHandler() === 'violet'\n                        })}>\n                            <p>Violet</p>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </OutsideClicker>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Profile_container__OBYQH\",\"name\":\"Profile_name__9EFSA\",\"avatarContainer\":\"Profile_avatarContainer__VuBqv\",\"svg\":\"Profile_svg__uWmy7\",\"img\":\"Profile_img__WBvF+\"};","import css from './Profile.module.scss';\nimport sprite from '../../../assets/icons/icons.svg';\nimport { useSelector } from 'react-redux';\nimport { selectName } from 'redux/auth/authSelectors';\n\nexport const Profile = ({ modalHandler, avatar, userAvatar }) => {\n    const name = useSelector(selectName);\n\n    const checkAvatar = () => {\n        if (avatar && avatar?.length > 0) {\n            return avatar;\n        }\n        return userAvatar;\n    }\n\n// console.log('test', checkAvatar)\n    return (\n        <div className={css.container}>\n            <div className={css.tooltip}>\n                <p></p>\n            </div>\n            <p className={css.name}>{name}</p>\n            <div className={css.avatarContainer} onClick={modalHandler}>\n                {userAvatar?.length === 0 && !avatar ? (\n                    <svg className={css.svg}>\n                        <use href={sprite + '#user-avatar-icon'}></use>\n                    </svg>\n                ) : (\n                    <img className={css.img} src={`${checkAvatar()}`} alt=\"Avatar\" />\n                )}\n            </div>\n        </div>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"ProfileModal_modal__uUk-c\",\"header\":\"ProfileModal_header__p2Gkw\",\"imageContainer\":\"ProfileModal_imageContainer__TkbH5\",\"svg\":\"ProfileModal_svg__R5DnF\",\"image\":\"ProfileModal_image__riVrJ\",\"addImg\":\"ProfileModal_addImg__7yF92\",\"label\":\"ProfileModal_label__anism\",\"labelSvg\":\"ProfileModal_labelSvg__p6IXF\",\"addFile\":\"ProfileModal_addFile__amgiz\",\"passLabel\":\"ProfileModal_passLabel__ee77g\",\"input\":\"ProfileModal_input__Bkn-5\",\"iconEye\":\"ProfileModal_iconEye__cCPGf\",\"errorMessage\":\"ProfileModal_errorMessage__EFQxM\",\"button\":\"ProfileModal_button__N+D4X\"};","import { useEffect, useState } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport InputField from 'shared/components/InputField/InputField';\nimport * as yup from 'yup';\nimport css from './ProfileModal.module.scss';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateUser, updateAvatar } from 'redux/auth/authOperations';\nimport sprite from '../../../assets/icons/icons.svg';\nimport clsx from 'clsx';\nimport { selectUser } from 'redux/auth/authSelectors';\n\nconst schema = yup.object().shape({\n  name: yup\n    .string()\n    .min(2, 'Username must be at least 2 characters')\n    .max(64, 'Username must be less than or equal to 64 characters')\n    .required('Username is a required field'),\n  email: yup\n    .string()\n    .email('Email must be a valid email')\n    .min(3, 'Email must be at least 3 characters')\n    .max(64, 'Email must be less than or equal to 64 characters')\n    .required('Email is a required field'),\n  password: yup\n    .string()\n    .min(8, 'Password must be at least 8 characters')\n    .max(64, 'Password must be less than or equal to 64 characters')\n    .required('Password is a required field'),\n});\n\nexport const ProfileModal = ({ modalHandler, avatar, userAvatar }) => {\n  const [image, setImage] = useState(null);\n  const [showPass, setShowPass] = useState('password');\n  const dispatch = useDispatch();\n  const userObj = useSelector(selectUser);\n\n  const InitalVelues = {\n    name: userObj.name,\n    email: userObj.email,\n    password: '',\n  };\n\n  useEffect(() => {\n    if (image) {\n      const formData = new FormData();\n      formData.append('avatar', image);\n\n      if(image.size > 1040000) return alert('Maximum image size is 1MB');\n\n      dispatch(updateAvatar(formData));\n      setImage(null);\n    }\n  }, [image, dispatch]);\n\n  const submitHandler = (values, { resetForm }) => {\n    dispatch(\n      updateUser({\n        name: values.name,\n        email: values.email,\n        password: values.password,\n      })\n    );\n\n    resetForm();\n    modalHandler();\n  };\n\n  const handleFileSelect = evt => {\n    setImage(evt.target.files[0]);\n  };\n\n  const checkAvatar = () => {\n    if (avatar && avatar.length > 0) {\n        return avatar;\n    }\n    return userAvatar;\n  }\n\n  return (\n    <div className={css.modal}>\n      <div className={css.imageContainer}>\n        {userAvatar.length === 0 && !avatar ? (\n          <svg className={css.svg}>\n            <use href={sprite + '#user-avatar-icon'}></use>\n          </svg>\n        ) : (\n          <div className={css.image}>\n            <img className={css.img} src={checkAvatar()} alt=\"Avatar\" />\n          </div>\n        )}\n        <div className={css.addImg}>\n          <label className={css.label} htmlFor=\"inputAddFile\">\n            <svg className={css.labelSvg}>\n                <use href={sprite + \"#icon-btn-plus\"}></use>\n            </svg>\n          </label>\n          <input\n            className={css.addFile}\n            id=\"inputAddFile\"\n            type=\"file\"\n            accept=\"image/png, image/jpeg\"\n            placeholder=\"\"\n            onChange={handleFileSelect}\n          />\n        </div>\n      </div>\n\n      <Formik\n        initialValues={InitalVelues}\n        validationSchema={schema}\n        onSubmit={submitHandler}\n      >\n        <Form>\n          <InputField name=\"name\" placeholder=\"Enter name\" />\n          <InputField name=\"email\" placeholder=\"Enter email\" value=\"hello\" />\n          <div  className={css.passLabel}>\n            <Field \n                // id='updatePassInput'\n                name=\"password\" \n                placeholder=\"Enter password\" \n                type={showPass} \n                className={css.input}\n            />\n            \n            <ErrorMessage name=\"password\" component=\"span\" className={css.errorMessage} />\n            \n            {showPass === 'password' ? (\n                <svg className={css.iconEye} onClick={() => setShowPass('text')}>\n                    <use href={sprite + \"#icon-eye-blocked\"}></use>\n                </svg>\n            ) : (\n                <svg className={clsx({\n                    [css.iconEye] : true,\n                    [css.iconEyeOpen] : showPass === 'text'\n                })} onClick={() => setShowPass('password')}>\n                    <use href={sprite + \"#icon-eye\"}></use>\n                </svg>\n            )}\n\n          </div>\n          <button className={css.button} type=\"submit\">\n            Send\n          </button>\n        </Form>\n      </Formik>\n    </div>\n  );\n};\n","export let themes = {\n    dark: {\n        primaryBackground: '#121212',\n        secondaryBackground: '#1F1F1F',\n        headerBackground: '#161616',\n        primaryTextColor: '#FFFFFF',\n        secondaryTextColor: 'rgba(255, 255, 255, 0.5)',\n        boardHeaders: '#FFFFFF',\n        btnBg: '#BEDBB0',\n        btnTextColor: '#121212',\n        selectHeader: 'rgba(255, 255, 255, 0.8)',\n        selectOption: 'rgba(255, 255, 255, 0.5)',\n        selectListBg: '#151515',\n        selectListBorder: '#BEDBB0',\n        modalBackground: '#151515',\n        btnModalIconPlus: '#FFFFFF',\n        btnModalBg: \"#161616\",\n        btnModalTextColor: \"#161616\",\n        cardBg: \"#121212\",\n        boardAddColumnBtn: \"#FFFFFF\",\n        boardAddColumnPlus: \"#121212\",\n        headerModalBtnAddFile: \"#BEDBB0\",\n        sidebarBoardActiveBg: \"#1F1F1F\",\n        sidebarHelpWrapperBg: \"#1F1F1F\",\n        sidebarButtonCreateBg: \"#BEDBB0\",\n        sidebarButtonIconPlus: \"#121212\",\n        sidebarBoardItemHover: \"#404040\",\n        sidebarTextColorMain: \"#FFF\",\n        btnHoverMain:\"#a8cf96\",\n        btnActiveMain: \"#8bbf73\",\n        btnHoverSecondary: \"#d9d9d9\",\n        btnActiveSecondary: \"#b3b3b3\",\n        sidebarTextColorSecondary: \"rgba(255, 255, 255, 0.50)\",\n        priorityWithoutPriority: \"rgba(255, 255, 255, 0.3)\"\n    },\n    light: {\n        primaryBackground: '#FFFFFF',\n        secondaryBackground: '#F6F6F7',\n        headerBackground: '#FCFCFC',\n        primaryTextColor: '#161616',\n        secondaryTextColor: 'rgba(22, 22, 22, 0.5)',\n        boardHeaders: '#161616B2',\n        btnBg: '#BEDBB0',\n        btnTextColor: '#161616',\n        selectHeader: 'rgba(160, 160, 160, 0.8)',\n        selectOption: '#161616',\n        selectListBg: '#FCFCFC',\n        selectListBorder: '#BEDBB0',\n        modalBackground: '#FCFCFC',\n        btnModalIconPlus: '#FFFFFF',\n        btnModalBg: \"#161616\",\n        cardBg: \"#FFFFFF\",\n        boardAddColumnBtn: \"#121212\",\n        boardAddColumnPlus: \"#FFFFFF\",\n        headerModalBtnAddFile: \"#BEDBB0\",\n        sidebarBoardActiveBg: \"#F6F6F7\",\n        sidebarHelpWrapperBg: \"#F6F6F7\",\n        sidebarButtonCreateBg: \"#BEDBB0\",\n        sidebarButtonIconPlus: \"#121212\",\n        sidebarBoardItemHover: \"#e4e4e7\",\n        sidebarTextColorMain: \"#161616\",\n        sidebarTextColorSecondary: \"rgba(22, 22, 22, 0.50)\",\n        btnHoverMain: \"#a8cf96\",\n        btnActiveMain: \"#8bbf73\",\n        btnHoverSecondary: \"#404040\",\n        btnActiveSecondary: \"#737373\",\n        priorityWithoutPriority: \"rgba(22, 22, 22, 0.30)\"\n    },\n    violet: {\n        primaryBackground: '#5255BC',\n        secondaryBackground: '#ECEDFD',\n        headerBackground: '#FFFFFF',\n        primaryTextColor: '#161616',\n        secondaryTextColor: 'rgba(22, 22, 22, 0.5)',\n        boardHeaders: '#161616',\n        btnBg: '#5255BC',\n        btnTextColor: '#FFFFFF',\n        selectHeader: 'rgba(160, 160, 160, 0.8)',\n        selectOption: '#161616',\n        selectListBg: '#FCFCFC',\n        selectListBorder: '#ECEDFD',\n        modalBackground: '#FCFCFC',\n        btnModalIconPlus: '#161616',\n        btnModalBg: \"#FFFFFF\",\n        cardBg: \"#FFFFFF\",\n        boardAddColumnBtn: \"#5255BC\",\n        boardAddColumnPlus: \"#FFFFFF\",\n        headerModalBtnAddFile: \"#ECEDFD\",\n        sidebarBoardActiveBg: \"rgba(255, 255, 255, 0.21)\",\n        sidebarHelpWrapperBg: \"rgba(236, 237, 253, 0.40)\",\n        sidebarButtonCreateBg: \"#B8BCFD\",\n        sidebarButtonIconPlus: \"#FFFFFF\",\n        sidebarBoardItemHover: \"rgba(217, 217, 217, 0.5)\",\n        sidebarTextColorMain: \"#FFF\",\n        sidebarTextColorSecondary: \"rgba(255, 255, 255, 0.50)\",\n        btnHoverMain: \"#6c6fc6\",\n        btnActiveMain: \"#4044a5\",\n        btnHoverSecondary: \"#6c6fc6\",\n        btnActiveSecondary: \"#4044a5\",\n        priorityWithoutPriority: \"rgba(22, 22, 22, 0.30)\"\n    }\n}\n// --btn-hover-main: #a8cf96;\n// --btn-active-main: #8bbf73;\nexport const selectHandler = (theme) => {\n    const root = document.querySelector(':root');\n\n    root.style.setProperty('--primary-background', themes[theme].primaryBackground);\n    root.style.setProperty('--secondary-background', themes[theme].secondaryBackground );\n    root.style.setProperty('--header-background', themes[theme].headerBackground);\n    root.style.setProperty('--primary-text-color', themes[theme].primaryTextColor);\n    root.style.setProperty('--secondary-text-color', themes[theme].secondaryTextColor);\n    root.style.setProperty('--board-headers', themes[theme].boardHeaders);\n    root.style.setProperty('--btn-bg', themes[theme].btnBg);\n    root.style.setProperty('--btn-text-color', themes[theme].btnTextColor);\n    root.style.setProperty('--select-header', themes[theme].selectHeader);\n    root.style.setProperty('--select-option', themes[theme].selectOption);\n    root.style.setProperty('--select-list-bg', themes[theme].selectListBg);\n    root.style.setProperty('--select-list-border', themes[theme].selectListBorder);\n    root.style.setProperty('--modal-background', themes[theme].modalBackground);\n    root.style.setProperty('--btn-modal-icon-plus', themes[theme].btnModalIconPlus);\n    root.style.setProperty('--btn-modal-bg', themes[theme].btnModalBg);\n    root.style.setProperty('--btn-modal-text-color', themes[theme].btnModalTextColor);\n    root.style.setProperty('--card-bg', themes[theme].cardBg);\n    root.style.setProperty('--board-add-column-btn', themes[theme].boardAddColumnBtn);\n    root.style.setProperty('--board-add-column-plus', themes[theme].boardAddColumnPlus);\n    root.style.setProperty('--header-modal-btn-add-file', themes[theme].headerModalBtnAddFile);\n    root.style.setProperty('--sidebar-board-active-bg', themes[theme].sidebarBoardActiveBg);\n    root.style.setProperty('--sidebar-help-wrapper-bg', themes[theme].sidebarHelpWrapperBg);\n    root.style.setProperty('--sidebar-button-create-bg', themes[theme].sidebarButtonCreateBg);\n    root.style.setProperty('--sidebar-button-icon-plus', themes[theme].sidebarButtonIconPlus);\n    root.style.setProperty('--sidebar-board-item-hover', themes[theme].sidebarBoardItemHover);\n    root.style.setProperty('--sidebar-text-color-main', themes[theme].sidebarTextColorMain);\n    root.style.setProperty('--sidebar-text-color-secondary', themes[theme].sidebarTextColorSecondary);\n    root.style.setProperty('--btn-hover-main', themes[theme].btnHoverMain);\n    root.style.setProperty('--btn-active-main', themes[theme].btnActiveMain);\n    root.style.setProperty('--btn-hover-secondary', themes[theme].btnHoverSecondary);\n    root.style.setProperty('--btn-active-secondary', themes[theme].btnActiveSecondary);\n    root.style.setProperty('--priority-without-priority', themes[theme].priorityWithoutPriority);\n\n    // --sidebar-board-item-hover: #404040;\n    // --btn-hover-secondary: #d9d9d9;\n    // --btn-active-secondary: #b3b3b3;\n    // setSelectedTheme(theme);\n}","import css from './Header.module.scss';\nimport { SelectTheme } from './SelectTheme/SelectTheme';\nimport { Profile } from './Profile/Profile';\nimport { ProfileModal } from './ProfileModal/ProfileModal';\n\nimport { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n  selectUserTheme,\n  selectAvatar,\n  selectUserAvatar,\n} from 'redux/auth/authSelectors';\nimport Modal from 'components/Modal/Modal';\nimport { useDispatch } from 'react-redux';\nimport { switchTheme } from 'redux/auth/authOperations';\nimport { toggleSidebar } from 'redux/board/boardOperations';\n\nimport sprite from '../../assets/icons/icons.svg';\nimport { selectHandler } from '../../services/themes';\n\nexport const Header = () => {\n  const userTheme = useSelector(selectUserTheme);\n  const userAvatar = useSelector(selectUserAvatar);\n  const avatar = useSelector(selectAvatar);\n  const [selectedTheme, setSelectedTheme] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (userTheme) selectHandler(userTheme);\n  }, [userTheme]);\n\n  useEffect(() => {\n    if (selectedTheme) {\n      // console.log('useEffect if', selectedTheme)\n      selectHandler(selectedTheme);\n      dispatch(switchTheme(selectedTheme));\n    }\n    return;\n  }, [selectedTheme, dispatch]);\n\n  const modalHandler = () => setIsModalOpen(!isModalOpen);\n\n  return (\n    // <Container>\n    <header className={css.header}>\n      <div className={css.menu} onClick={() => dispatch(toggleSidebar(true))}>\n        <svg className={css.icon}>\n          <use href={sprite + '#icon-burger-menu'}></use>\n        </svg>\n      </div>\n      <div className={css.container}>\n        <SelectTheme\n          selectHandler={selectHandler}\n          userTheme={userTheme}\n          selectedTheme={selectedTheme}\n          setSelectedTheme={setSelectedTheme}\n        ></SelectTheme>\n        <Profile\n          modalHandler={modalHandler}\n          avatar={avatar}\n          userAvatar={userAvatar}\n        ></Profile>\n      </div>\n      {isModalOpen && (\n        <Modal title={'Edit profile'} closeModal={modalHandler}>\n          <ProfileModal\n            modalHandler={modalHandler}\n            avatar={avatar}\n            userAvatar={userAvatar}\n          ></ProfileModal>\n        </Modal>\n      )}\n    </header>\n    // </Container>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"icon\":\"LogoComponent_icon__K3ESn\"};","import Icon from 'components/Icon/Icon';\nimport st from './LogoComponent.module.scss';\nexport const LogoComponent = () => {\n  return (\n    <div className={st.icon}>\n      <Icon name={'icon-iconlogo'} width={32} height={32} />\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Formik, Form } from 'formik';\nimport * as yup from 'yup';\nimport clsx from 'clsx';\nimport Box from '@mui/joy/Box';\nimport Radio from '@mui/joy/Radio';\nimport RadioGroup from '@mui/joy/RadioGroup';\nimport InputField from 'shared/components/InputField/InputField';\nimport Icon from '../../Icon/Icon';\nimport ButtonModalWithIcon from 'components/Modal/ButtonModalWithIcon';\nimport BgIcon from './BgIcon';\nimport s from './NewBoard.module.scss';\n\nimport defaultBg from '../../../static/images/bgIcons/defaultBg.png';\nimport flowers from '../../../static/images/bgIcons/flowers.png';\nimport leaves from '../../../static/images/bgIcons/leaves.png';\nimport mountainsAndBalloon from '../../../static/images/bgIcons/mountainsAndBalloon.png';\nimport nature from '../../../static/images/bgIcons/nature.png';\nimport oceanAndYacht from '../../../static/images/bgIcons/oceanAndYacht.png';\nimport orangePlanet from '../../../static/images/bgIcons/orangePlanet.png';\nimport planets from '../../../static/images/bgIcons/planets.png';\nimport rocksAndOcean from '../../../static/images/bgIcons/rocksAndOcean.png';\nimport sakura from '../../../static/images/bgIcons/sakura.png';\nimport sky from '../../../static/images/bgIcons/sky.png';\nimport skyBalloons from '../../../static/images/bgIcons/skyBalloons.png';\nimport starsAndShine from '../../../static/images/bgIcons/starsAndShine.png';\nimport trailerInTheCanyon from '../../../static/images/bgIcons/trailerInTheCanyon.png';\nimport yacht from '../../../static/images/bgIcons/yacht.png';\nimport youngMonth from '../../../static/images/bgIcons/youngMonth.png';\nimport { createNewBoard } from 'redux/board/boardOperations';\nimport { selectUserTheme } from 'redux/auth/authSelectors';\nimport defaultBgWhite from '../../../static/images/bgIcons/defaultBgWhite.png';\nconst initialsValue = {\n  title: '',\n};\n\nconst schema = yup.object().shape({\n  title: yup.string().required('Title is a required field'),\n});\n\nconst NewBoard = ({ closeModal }) => {\n  const [icon, setIcon] = useState('colors');\n  const [bg, setBg] = useState('defaultBg');\n  const theme = useSelector(selectUserTheme);\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(\n      createNewBoard({ title: values.title, icon: icon, background: bg })\n    );\n    closeModal();\n    resetForm();\n  };\n\n  return (\n    <Formik\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n      initialValues={initialsValue}\n    >\n      <Form>\n        <InputField name=\"title\" placeholder=\"Title\" />\n        <div>\n          <p className={s.title}>Icons</p>\n          <RadioGroup\n            orientation=\"horizontal\"\n            aria-label=\"Icons\"\n            name=\"icons\"\n            variant=\"outlined\"\n            value={icon}\n            onChange={event => setIcon(event.target.value)}\n            sx={{\n              marginBottom: '24px',\n              border: 'none',\n              gap: '8px',\n            }}\n          >\n            {[\n              'colors',\n              'hexagon',\n              'project',\n              'container',\n              'lightnight',\n              'loading',\n              'puzzle',\n              'star',\n            ].map(item => (\n              <Box\n                key={item}\n                sx={{\n                  position: 'relative',\n                  display: 'flex',\n                  justifyContent: 'center',\n                  alignItems: 'center',\n                }}\n              >\n                <Radio\n                  value={item}\n                  disableIcon\n                  overlay\n                  name=\"icons\"\n                  label={\n                    {\n                      colors: (\n                        <Icon\n                          name={theme === 'dark' ? 'colors' : 'colors-white'}\n                          width={18}\n                          height={18}\n                          secondaryClassName={clsx(\n                            s.svgIcon,\n                            icon === 'colors' && s.activeSvgIcon\n                          )}\n                        />\n                      ),\n                      hexagon: (\n                        <Icon\n                          name={theme === 'dark' ? 'hexagon' : 'hexagon-white'}\n                          width={18}\n                          height={18}\n                          secondaryClassName={clsx(\n                            s.svgIcon,\n                            icon === 'hexagon' && s.activeSvgIcon\n                          )}\n                        />\n                      ),\n                      project: (\n                        <Icon\n                          name={theme === 'dark' ? 'project' : 'project-white'}\n                          width={18}\n                          height={18}\n                          secondaryClassName={clsx(\n                            s.svgIcon,\n                            icon === 'project' && s.activeSvgIcon\n                          )}\n                        />\n                      ),\n                      container: (\n                        <Icon\n                          name={\n                            theme === 'dark' ? 'container' : 'container-white'\n                          }\n                          width={18}\n                          height={18}\n                          secondaryClassName={clsx(\n                            s.svgIcon,\n                            icon === 'container' && s.activeSvgIcon\n                          )}\n                        />\n                      ),\n                      lightnight: (\n                        <Icon\n                          name={\n                            theme === 'dark' ? 'lightnight' : 'lightnight-white'\n                          }\n                          width={18}\n                          height={18}\n                          secondaryClassName={clsx(\n                            s.svgIcon,\n                            icon === 'lightnight' && s.activeSvgIcon\n                          )}\n                        />\n                      ),\n                      loading: (\n                        <Icon\n                          name={theme === 'dark' ? 'loading' : 'loading-white'}\n                          width={18}\n                          height={18}\n                          secondaryClassName={clsx(\n                            s.svgIcon,\n                            icon === 'loading' && s.activeSvgIcon\n                          )}\n                        />\n                      ),\n                      puzzle: (\n                        <Icon\n                          name={theme === 'dark' ? 'puzzle' : 'puzzle-white'}\n                          width={18}\n                          height={18}\n                          secondaryClassName={clsx(\n                            s.svgIcon,\n                            icon === 'puzzle' && s.activeSvgIcon\n                          )}\n                        />\n                      ),\n                      star: (\n                        <Icon\n                          name={theme === 'dark' ? 'star' : 'star-white'}\n                          width={18}\n                          height={18}\n                          secondaryClassName={clsx(\n                            s.svgIcon,\n                            icon === 'star' && s.activeSvgIcon\n                          )}\n                        />\n                      ),\n                    }[item]\n                  }\n                  variant={icon === item ? 'solid' : 'plain'}\n                  sx={{\n                    '& .Joy-checked': {\n                      backgroundColor: 'transparent',\n                    },\n                    '& .MuiRadio-label': {\n                      width: '18px',\n                      height: '18px',\n                    },\n                  }}\n                  slotProps={{\n                    input: { 'aria-label': item },\n                    action: {\n                      sx: {\n                        '&:hover': {\n                          backgroundColor: 'transparent',\n                        },\n                        borderRadius: 0,\n                        transition: 'none',\n                      },\n                    },\n                    label: { sx: { lineHeight: 0 } },\n                  }}\n                />\n              </Box>\n            ))}\n          </RadioGroup>\n        </div>\n        <div>\n          <p className={s.title}>Background</p>\n          <RadioGroup\n            orientation=\"horizontal\"\n            aria-label=\"Backgrounds\"\n            name=\"background\"\n            variant=\"outlined\"\n            value={bg}\n            onChange={event => setBg(event.target.value)}\n            sx={{\n              flexWrap: 'wrap',\n              width: '260px',\n              marginBottom: '24px',\n              border: 'none',\n              gap: '4px',\n            }}\n          >\n            {[\n              'defaultBg',\n              'flowers',\n              'leaves',\n              'mountainsAndBalloon',\n              'nature',\n              'oceanAndYacht',\n              'orangePlanet',\n              'planets',\n              'rocksAndOcean',\n              'sakura',\n              'sky',\n              'skyBalloons',\n              'starsAndShine',\n              'trailerInTheCanyon',\n              'yacht',\n              'youngMonth',\n            ].map(item => (\n              <Box\n                key={item}\n                sx={{\n                  position: 'relative',\n                  display: 'flex',\n                  justifyContent: 'center',\n                  alignItems: 'center',\n                }}\n              >\n                <Radio\n                  value={item}\n                  disableIcon\n                  overlay\n                  name=\"background\"\n                  label={\n                    {\n                      defaultBg:\n                        theme === 'dark' ? (\n                          <BgIcon name={defaultBg} alt={defaultBg} />\n                        ) : (\n                          <BgIcon name={defaultBgWhite} alt=\"icon\" />\n                        ),\n                      flowers: <BgIcon name={flowers} alt=\"icon\" />,\n                      leaves: <BgIcon name={leaves} alt=\"icon\" />,\n                      mountainsAndBalloon: (\n                        <BgIcon name={mountainsAndBalloon} alt=\"icon\" />\n                      ),\n                      nature: <BgIcon name={nature} alt=\"icon\" />,\n                      oceanAndYacht: <BgIcon name={oceanAndYacht} alt=\"icon\" />,\n                      orangePlanet: <BgIcon name={orangePlanet} alt=\"icon\" />,\n                      planets: <BgIcon name={planets} alt=\"icon\" />,\n\n                      rocksAndOcean: <BgIcon name={rocksAndOcean} alt=\"icon\" />,\n                      sakura: <BgIcon name={sakura} alt=\"icon\" />,\n                      sky: <BgIcon name={sky} alt=\"icon\" />,\n                      skyBalloons: <BgIcon name={skyBalloons} alt=\"icon\" />,\n                      starsAndShine: <BgIcon name={starsAndShine} alt=\"icon\" />,\n                      trailerInTheCanyon: (\n                        <BgIcon name={trailerInTheCanyon} alt=\"icon\" />\n                      ),\n                      yacht: <BgIcon name={yacht} alt=\"icon\" />,\n                      youngMonth: <BgIcon name={youngMonth} alt=\"icon\" />,\n                    }[item]\n                  }\n                  variant={bg === item ? 'solid' : 'plain'}\n                  sx={\n                    theme === 'violet'\n                      ? {\n                          '& .Joy-checked': {\n                            backgroundColor: 'transparent',\n                            outline: '2px solid #5255BC',\n                            borderRadius: '6px',\n                            zIndex: '99',\n                          },\n                        }\n                      : {\n                          '& .Joy-checked': {\n                            backgroundColor: 'transparent',\n                            outline: '2px solid #BEDBB0',\n                            borderRadius: '6px',\n                            zIndex: '99',\n                          },\n                        }\n                  }\n                  slotProps={{\n                    input: { 'aria-label': item },\n                    action: {\n                      sx: {\n                        '&:hover': {\n                          backgroundColor: 'transparent',\n                        },\n                        borderRadius: 0,\n                        transition: 'none',\n                      },\n                    },\n                    label: { sx: { lineHeight: 0 } },\n                  }}\n                />\n              </Box>\n            ))}\n          </RadioGroup>\n        </div>\n\n        <ButtonModalWithIcon text=\"Create\" />\n      </Form>\n    </Formik>\n  );\n};\n\nexport default NewBoard;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"NeedHelp_title__84d0P\",\"label\":\"NeedHelp_label__3X2O7\",\"textarea\":\"NeedHelp_textarea__+QoR6\",\"errorMessage\":\"NeedHelp_errorMessage__YwA2C\",\"button\":\"NeedHelp_button__lgwfC\"};","import { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport InputField from 'shared/components/InputField/InputField';\nimport s from './NeedHelp.module.scss';\nconst schema = yup.object().shape({\n  email: yup\n    .string()\n    .email('Email must be a valid email')\n    .min(3, 'Email must be at least 3 characters')\n    .max(64, 'Email must be less than or equal to 64 characters')\n    .required('Email is a required field'),\n  comment: yup.string().required('Comment is a required field'),\n});\n\nconst initialValues = {\n  email: '',\n  comment: '',\n};\n\nconst NeedHelp = ({ closeModal }) => {\n  const hendleSubmit = (values, { resetForm }) => {\n    const obj = {\n      email: values.email,\n      comment: values.comment,\n    };\n    console.log(obj);\n    closeModal();\n    resetForm();\n  };\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={hendleSubmit}\n    >\n      <Form autoComplete=\"off\">\n        <InputField name=\"email\" placeholder=\"Email address\" />\n        <label className={s.label}>\n          <Field\n            as=\"textarea\"\n            name=\"comment\"\n            placeholder=\"Comment\"\n            className={s.textarea}\n          />\n          <ErrorMessage\n            name=\"comment\"\n            component=\"span\"\n            className={s.errorMessage}\n          />\n        </label>\n        <button type=\"submit\" className={s.button}>\n          Send\n        </button>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default NeedHelp;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Sidebar_container__tRE6e\",\"sectionTop\":\"Sidebar_sectionTop__kXrut\",\"logoWrap\":\"Sidebar_logoWrap__fIZIy\",\"logoText\":\"Sidebar_logoText__j+pLJ\",\"boardsTitle\":\"Sidebar_boardsTitle__EnqDF\",\"createBoard\":\"Sidebar_createBoard__Vww8s\",\"buttonCreate\":\"Sidebar_buttonCreate__5kUMF\",\"sectionBoards\":\"Sidebar_sectionBoards__iwH2u\",\"boardsList\":\"Sidebar_boardsList__n6qaq\",\"boardItem\":\"Sidebar_boardItem__-Gzo2\",\"boardItemActive\":\"Sidebar_boardItemActive__MHmWx Sidebar_boardItem__-Gzo2\",\"boardName\":\"Sidebar_boardName__o2iew\",\"boardEditIcons\":\"Sidebar_boardEditIcons__6bzF5\",\"helpWrapper\":\"Sidebar_helpWrapper__bCJj5\",\"helpSend\":\"Sidebar_helpSend__ZNI1k\",\"helpText\":\"Sidebar_helpText__YwZd4\",\"btnLogout\":\"Sidebar_btnLogout__FPSmN\",\"icons\":\"Sidebar_icons__AoxeN\"};","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Formik, Form } from 'formik';\nimport * as yup from 'yup';\nimport clsx from 'clsx';\nimport Box from '@mui/joy/Box';\nimport Radio from '@mui/joy/Radio';\nimport RadioGroup from '@mui/joy/RadioGroup';\nimport InputField from 'shared/components/InputField/InputField';\nimport Icon from '../../Icon/Icon';\nimport ButtonModalWithIcon from 'components/Modal/ButtonModalWithIcon';\nimport BgIcon from './BgIcon';\nimport { updateBoardById } from 'redux/board/boardOperations';\nimport { selectCurrentBoardId } from 'redux/board/boardSelectors';\nimport s from './NewBoard.module.scss';\n\nimport defaultBg from '../../../static/images/bgIcons/defaultBg.png';\nimport flowers from '../../../static/images/bgIcons/flowers.png';\nimport leaves from '../../../static/images/bgIcons/leaves.png';\nimport mountainsAndBalloon from '../../../static/images/bgIcons/mountainsAndBalloon.png';\nimport nature from '../../../static/images/bgIcons/nature.png';\nimport oceanAndYacht from '../../../static/images/bgIcons/oceanAndYacht.png';\nimport orangePlanet from '../../../static/images/bgIcons/orangePlanet.png';\nimport planets from '../../../static/images/bgIcons/planets.png';\nimport rocksAndOcean from '../../../static/images/bgIcons/rocksAndOcean.png';\nimport sakura from '../../../static/images/bgIcons/sakura.png';\nimport sky from '../../../static/images/bgIcons/sky.png';\nimport skyBalloons from '../../../static/images/bgIcons/skyBalloons.png';\nimport starsAndShine from '../../../static/images/bgIcons/starsAndShine.png';\nimport trailerInTheCanyon from '../../../static/images/bgIcons/trailerInTheCanyon.png';\nimport yacht from '../../../static/images/bgIcons/yacht.png';\nimport youngMonth from '../../../static/images/bgIcons/youngMonth.png';\nimport { selectUserTheme } from 'redux/auth/authSelectors';\n\nconst schema = yup.object().shape({\n  title: yup.string().required('Title is a required field'),\n});\n\nconst EditBoard = ({ closeModal, boardToEdit }) => {\n  const [icon, setIcon] = useState(boardToEdit[0].icon);\n  const [bg, setBg] = useState(boardToEdit[0].background);\n  const currentBoardId = useSelector(selectCurrentBoardId);\n  const theme = useSelector(selectUserTheme);\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(\n      updateBoardById({\n        id: currentBoardId,\n        data: {\n          title: values.title,\n          icon: icon,\n          background: bg,\n        },\n      })\n    );\n    closeModal();\n    resetForm();\n  };\n\n  return (\n    <Formik\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n      initialValues={{ title: boardToEdit[0].title }}\n    >\n      <Form>\n        <InputField\n          name=\"title\"\n          placeholder=\"Title\"\n          value={boardToEdit[0].title}\n        />\n        <div>\n          <p className={s.title}>Icons</p>\n          <RadioGroup\n            orientation=\"horizontal\"\n            aria-label=\"Icons\"\n            name=\"icons\"\n            variant=\"outlined\"\n            value={icon}\n            onChange={event => setIcon(event.target.value)}\n            sx={{\n              marginBottom: '24px',\n              border: 'none',\n              gap: '8px',\n            }}\n          >\n            {[\n              'colors',\n              'hexagon',\n              'project',\n              'container',\n              'lightnight',\n              'loading',\n              'puzzle',\n              'star',\n            ].map(item => (\n              <Box\n                key={item}\n                sx={{\n                  position: 'relative',\n                  display: 'flex',\n                  justifyContent: 'center',\n                  alignItems: 'center',\n                }}\n              >\n                <Radio\n                  value={item}\n                  disableIcon\n                  overlay\n                  name=\"icons\"\n                  label={\n                    {\n                      colors: (\n                        <Icon\n                          name=\"colors\"\n                          width={18}\n                          height={18}\n                          secondaryClassName={clsx(\n                            s.svgIcon,\n                            icon === 'colors' && s.activeSvgIcon\n                          )}\n                        />\n                      ),\n                      hexagon: (\n                        <Icon\n                          name=\"hexagon\"\n                          width={18}\n                          height={18}\n                          secondaryClassName={clsx(\n                            s.svgIcon,\n                            icon === 'hexagon' && s.activeSvgIcon\n                          )}\n                        />\n                      ),\n                      project: (\n                        <Icon\n                          name=\"project\"\n                          width={18}\n                          height={18}\n                          secondaryClassName={clsx(\n                            s.svgIcon,\n                            icon === 'project' && s.activeSvgIcon\n                          )}\n                        />\n                      ),\n                      container: (\n                        <Icon\n                          name=\"container\"\n                          width={18}\n                          height={18}\n                          secondaryClassName={clsx(\n                            s.svgIcon,\n                            icon === 'container' && s.activeSvgIcon\n                          )}\n                        />\n                      ),\n                      lightnight: (\n                        <Icon\n                          name=\"lightnight\"\n                          width={18}\n                          height={18}\n                          secondaryClassName={clsx(\n                            s.svgIcon,\n                            icon === 'lightnight' && s.activeSvgIcon\n                          )}\n                        />\n                      ),\n                      loading: (\n                        <Icon\n                          name=\"loading\"\n                          width={18}\n                          height={18}\n                          secondaryClassName={clsx(\n                            s.svgIcon,\n                            icon === 'loading' && s.activeSvgIcon\n                          )}\n                        />\n                      ),\n                      puzzle: (\n                        <Icon\n                          name=\"puzzle\"\n                          width={18}\n                          height={18}\n                          secondaryClassName={clsx(\n                            s.svgIcon,\n                            icon === 'puzzle' && s.activeSvgIcon\n                          )}\n                        />\n                      ),\n                      star: (\n                        <Icon\n                          name=\"star\"\n                          width={18}\n                          height={18}\n                          secondaryClassName={clsx(\n                            s.svgIcon,\n                            icon === 'star' && s.activeSvgIcon\n                          )}\n                        />\n                      ),\n                    }[item]\n                  }\n                  variant={icon === item ? 'solid' : 'plain'}\n                  sx={{\n                    '& .Joy-checked': {\n                      backgroundColor: 'transparent',\n                    },\n                    '& .MuiRadio-label': {\n                      width: '18px',\n                      height: '18px',\n                    },\n                  }}\n                  slotProps={{\n                    input: { 'aria-label': item },\n                    action: {\n                      sx: {\n                        '&:hover': {\n                          backgroundColor: 'transparent',\n                        },\n                        borderRadius: 0,\n                        transition: 'none',\n                      },\n                    },\n                    label: { sx: { lineHeight: 0 } },\n                  }}\n                />\n              </Box>\n            ))}\n          </RadioGroup>\n        </div>\n        <div>\n          <p className={s.title}>Background</p>\n          <RadioGroup\n            orientation=\"horizontal\"\n            aria-label=\"Backgrounds\"\n            name=\"background\"\n            variant=\"outlined\"\n            value={bg}\n            onChange={event => setBg(event.target.value)}\n            sx={{\n              flexWrap: 'wrap',\n              width: '260px',\n              marginBottom: '24px',\n              border: 'none',\n              gap: '4px',\n            }}\n          >\n            {[\n              'defaultBg',\n              'flowers',\n              'leaves',\n              'mountainsAndBalloon',\n              'nature',\n              'oceanAndYacht',\n              'orangePlanet',\n              'planets',\n              'rocksAndOcean',\n              'sakura',\n              'sky',\n              'skyBalloons',\n              'starsAndShine',\n              'trailerInTheCanyon',\n              'yacht',\n              'youngMonth',\n            ].map(item => (\n              <Box\n                key={item}\n                sx={{\n                  position: 'relative',\n                  display: 'flex',\n                  justifyContent: 'center',\n                  alignItems: 'center',\n                }}\n              >\n                <Radio\n                  value={item}\n                  disableIcon\n                  overlay\n                  name=\"background\"\n                  label={\n                    {\n                      defaultBg: <BgIcon name={defaultBg} alt={defaultBg} />,\n                      flowers: <BgIcon name={flowers} alt={flowers} />,\n                      leaves: <BgIcon name={leaves} alt={leaves} />,\n                      mountainsAndBalloon: (\n                        <BgIcon\n                          name={mountainsAndBalloon}\n                          alt={mountainsAndBalloon}\n                        />\n                      ),\n                      nature: <BgIcon name={nature} alt={nature} />,\n                      oceanAndYacht: (\n                        <BgIcon name={oceanAndYacht} alt={oceanAndYacht} />\n                      ),\n                      orangePlanet: (\n                        <BgIcon name={orangePlanet} alt={orangePlanet} />\n                      ),\n                      planets: <BgIcon name={planets} alt={planets} />,\n\n                      rocksAndOcean: (\n                        <BgIcon name={rocksAndOcean} alt={rocksAndOcean} />\n                      ),\n                      sakura: <BgIcon name={sakura} alt={sakura} />,\n                      sky: <BgIcon name={sky} alt={sky} />,\n                      skyBalloons: (\n                        <BgIcon name={skyBalloons} alt={skyBalloons} />\n                      ),\n                      starsAndShine: (\n                        <BgIcon name={starsAndShine} alt={starsAndShine} />\n                      ),\n                      trailerInTheCanyon: (\n                        <BgIcon\n                          name={trailerInTheCanyon}\n                          alt={trailerInTheCanyon}\n                        />\n                      ),\n                      yacht: <BgIcon name={yacht} alt={yacht} />,\n                      youngMonth: <BgIcon name={youngMonth} alt={youngMonth} />,\n                    }[item]\n                  }\n                  variant={bg === item ? 'solid' : 'plain'}\n                  sx={\n                    theme === 'violet'\n                      ? {\n                          '& .Joy-checked': {\n                            backgroundColor: 'transparent',\n                            outline: '2px solid #5255BC',\n                            borderRadius: '6px',\n                            zIndex: '99',\n                          },\n                        }\n                      : {\n                          '& .Joy-checked': {\n                            backgroundColor: 'transparent',\n                            outline: '2px solid #BEDBB0',\n                            borderRadius: '6px',\n                            zIndex: '99',\n                          },\n                        }\n                  }\n                  slotProps={{\n                    input: { 'aria-label': item },\n                    action: {\n                      sx: {\n                        '&:hover': {\n                          backgroundColor: 'transparent',\n                        },\n                        borderRadius: 0,\n                        transition: 'none',\n                      },\n                    },\n                    label: { sx: { lineHeight: 0 } },\n                  }}\n                />\n              </Box>\n            ))}\n          </RadioGroup>\n        </div>\n\n        <ButtonModalWithIcon text=\"Edit\" />\n      </Form>\n    </Formik>\n  );\n};\n\nexport default EditBoard;\n","import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\n// import { Button } from '@mui/material';\nimport cactus from '../../static/images/cactus.png';\nimport { LogoComponent } from 'components/LogoComponent/LogoComponent';\nimport NewBoard from 'components/Forms/NewBoardAndEditBoard/NewBoardForm';\nimport NeedHelp from 'components/Forms/NeedHelp/NeedHelp';\nimport Modal from 'components/Modal/Modal';\nimport Icon from 'components/Icon/Icon';\nimport IconBtn from 'components/IconBtn/IconBtn';\nimport { logOutUser } from 'redux/auth/authOperations';\nimport st from './Sidebar.module.scss';\nimport {\n  deleteBoardById,\n  getAllBoards,\n  getBoardById,\n} from 'redux/board/boardOperations';\nimport EditBoard from 'components/Forms/NewBoardAndEditBoard/EditBoard';\nimport { selectBoards, selectCurrentBoardId } from 'redux/board/boardSelectors';\nimport { selectName, selectUserTheme } from 'redux/auth/authSelectors';\nimport clsx from 'clsx';\n\nexport const Sidebar = () => {\n  const boards = useSelector(selectBoards);\n  const theme = useSelector(selectUserTheme);\n  const isLoggedIn = useSelector(selectName);\n  const currentBoard = useSelector(selectCurrentBoardId);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [addBoardModal, setAddBoardModal] = useState(false);\n  const [needHelpModalOpen, setNeedHelpModalOpen] = useState(false);\n  const [editBoardModal, setEditBoardModal] = useState(false);\n  const [activeItemId, setActiveItemId] = useState(null);\n  const [boardToEdit, setBoardToEdit] = useState(null);\n  // console.log(isLoggedIn);\n\n  useEffect(() => {\n    isLoggedIn && dispatch(getAllBoards());\n  }, [dispatch, isLoggedIn]);\n\n  useEffect(() => {\n    if (boards.length === 0) {\n      return;\n    }\n    if (!currentBoard) {\n      setActiveItemId(boards[0]._id);\n      const newTitle = boards[0].title.split(' ').join('-').toLowerCase();\n      navigate(`/home/${newTitle}`);\n    }\n  }, [boards, currentBoard, navigate]);\n\n  useEffect(() => {\n    dispatch(getBoardById(activeItemId));\n  }, [activeItemId, dispatch]);\n\n  const handleAddBoard = () => setAddBoardModal(!addBoardModal);\n\n  const handleNeedHelp = () => setNeedHelpModalOpen(!needHelpModalOpen);\n\n  const handleEditBoardModal = () => setEditBoardModal(!editBoardModal);\n\n  const handleChangeActive = (id, title) => {\n    setActiveItemId(id);\n\n    const newTitle = title.split(' ').join('-').toLowerCase();\n    navigate(`/home/${newTitle}`);\n  };\n\n  const handleEditBoard = id => {\n    setBoardToEdit(boards.filter(el => el._id === currentBoard));\n    handleEditBoardModal();\n  };\n\n  const handleDeleteBoard = id => {\n    dispatch(deleteBoardById(id));\n    dispatch(getBoardById(null));\n  };\n\n  const handleLogout = () => {\n    dispatch(logOutUser());\n  };\n  return (\n    <nav>\n      <section className={st.sectionTop}>\n        <div className={st.container}>\n          <div className={st.logoWrap}>\n            <LogoComponent />\n            <p className={st.logoText}>Task Pro</p>\n          </div>\n\n          <p className={st.boardsTitle}>My boards</p>\n          <div className={st.createBoard}>\n            <p>Create a new board</p>\n            <button\n              type=\"button\"\n              className={st.buttonCreate}\n              onClick={handleAddBoard}\n            >\n              <Icon name={'icon-btn-plus'} width={20} height={20} />\n            </button>\n          </div>\n        </div>\n      </section>\n      <section className={st.sectionBoards}>\n        <ul className={st.boardsList}>\n          {boards?.map(el => {\n            const currentClass =\n              el._id === activeItemId ? st.boardItemActive : st.boardItem;\n            return (\n              <li\n                key={el._id}\n                className={currentClass}\n                onClick={() => handleChangeActive(el._id, el.title)}\n              >\n                <div className={st.boardName}>\n                  <Icon\n                    name={el.icon}\n                    width={18}\n                    height={18}\n                    className={st.boardIcon}\n                  />\n                  <p>{el.title}</p>\n                </div>\n                {el._id === activeItemId && (\n                  <>\n                    <div className={st.boardEditIcons}>\n                      <IconBtn\n                        name=\"icon-pencil\"\n                        width={16}\n                        height={16}\n                        secondaryClassName={clsx(\n                          theme === 'violet' && st.icons\n                        )}\n                        onClick={() => handleEditBoard(el._id)}\n                      />\n                      <IconBtn\n                        name=\"icon-trash\"\n                        width={16}\n                        height={16}\n                        secondaryClassName={clsx(\n                          theme === 'violet' && st.icons\n                        )}\n                        onClick={() => handleDeleteBoard(el._id)}\n                      />\n                    </div>\n                  </>\n                )}\n              </li>\n            );\n          })}\n        </ul>\n      </section>\n      <section className={st.sectionHelp}>\n        <div className={st.container}>\n          <div className={st.helpWrapper}>\n            <img src={cactus} alt=\"cactus\" className={st.helpCactus} />\n            <p className={st.helpText}>\n              If you need help with <br />\n              <span> TaskPro</span>, check out our support resources or reach\n              out to our customer support team.\n            </p>\n            <button className={st.helpSend} onClick={handleNeedHelp}>\n              <Icon\n                name={'icon-help-circle'}\n                width={20}\n                height={20}\n                secobdaryClassName={st.helpIcon}\n              />\n              Need help?\n            </button>\n          </div>\n        </div>\n      </section>\n      <section className={st.sectionLogOut}>\n        <div className={st.container}>\n          <button className={st.btnLogout} onClick={handleLogout}>\n            <Icon name={'icon-iconlogout'} width={32} height={32} />\n            Log out\n          </button>\n        </div>\n      </section>\n      {addBoardModal && (\n        <Modal title={'New board'} closeModal={handleAddBoard}>\n          <NewBoard closeModal={handleAddBoard} />\n        </Modal>\n      )}\n      {needHelpModalOpen && (\n        <Modal title=\"Need help\" closeModal={handleNeedHelp}>\n          <NeedHelp closeModal={handleNeedHelp} />\n        </Modal>\n      )}\n      {editBoardModal && (\n        <Modal title=\"Edit board\" closeModal={handleEditBoardModal}>\n          <EditBoard\n            closeModal={handleEditBoardModal}\n            boardToEdit={boardToEdit}\n          />\n        </Modal>\n      )}\n    </nav>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"welcomePage\":\"WelcomePageBoard_welcomePage__bfwyS\",\"welcomeContainerDiscription\":\"WelcomePageBoard_welcomeContainerDiscription__Z4B6z\",\"welcomeDiscription\":\"WelcomePageBoard_welcomeDiscription__BuMbu\",\"createBoardLink\":\"WelcomePageBoard_createBoardLink__KmUes\"};","import Modal from \"components/Modal/Modal\";\nimport Filters from \"../Filters/Filters\";\nimport s from './WelcomePageBoard.module.scss';\nimport NewBoard from \"components/Forms/NewBoardAndEditBoard/NewBoardForm\";\nimport { useState } from \"react\";\n\nconst WelcomePageBoard = () => {\n  const [showModal, setShowModal] = useState(false);\n\n  const handleCreateBoardClick = () => {\n    setShowModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setShowModal(false);\n  };\n\n  return (\n    <div>\n      <div className={s.welcomePage}>\n        <Filters />\n      </div>\n      <div className={s.welcomeContainerDiscription}>\n        <p className={s.welcomeDiscription}>\n        Before starting your project, it is essential {\" \"}<span className={s.createBoardLink} onClick={handleCreateBoardClick}>to create a board</span>{\" \"} to visualize and track all the necessary tasks and milestones. This board serves as a powerful tool to organize the workflow and ensure effective collaboration among team members.\n        </p>\n      </div>\n      {showModal && (\n        <Modal title=\"New board\" closeModal={handleCloseModal}>\n          <NewBoard />\n        </Modal>\n      )}\n    </div>\n  )\n}\n\nexport default WelcomePageBoard;\n","// extracted by mini-css-extract-plugin\nexport default {\"hidden\":\"HomePage_hidden__zxuF6\",\"sideBarBackDrop\":\"HomePage_sideBarBackDrop__b987A\",\"showMobile\":\"HomePage_showMobile__g2GpM\",\"sideBar\":\"HomePage_sideBar__W15jR\",\"sideBarOpen\":\"HomePage_sideBarOpen__V9qKB HomePage_sideBar__W15jR\",\"homeWrap\":\"HomePage_homeWrap__4oaan\",\"screenWrap\":\"HomePage_screenWrap__vfEGW\"};","import { Outlet } from 'react-router-dom';\nimport { Suspense, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useMediaQuery } from 'react-responsive';\nimport { Header } from 'components/Header/Header';\nimport { Sidebar } from 'components/Sidebar/Sidebar';\nimport { toggleSidebar } from 'redux/board/boardOperations';\nimport { getAllTasks } from 'redux/board/boardOperations';\nimport WelcomePageBoard from 'components/Bord/WelcomePageBoard/WelcomePageBoard';\nimport { selectBoards } from 'redux/board/boardSelectors';\nimport { Container } from '@mui/joy';\nimport { selectIsSidebar } from 'redux/board/boardSelectors';\nimport clsx from 'clsx';\nimport s from './HomePage.module.scss';\n\nconst HomePage = () => {\n  const dispatch = useDispatch();\n  const boards = useSelector(selectBoards);\n  const isDesktop = useMediaQuery({ minWidth: 1280 });\n  const isMobileOpen = useSelector(selectIsSidebar);\n\n  useEffect(() => {\n    dispatch(getAllTasks());\n  }, [dispatch]);\n\n  const closeMobileOnBackdrop = e => {\n    if (e.target === e.currentTarget) {\n      dispatch(toggleSidebar(false));\n    }\n  };\n\n  return (\n    <>\n      <Suspense fallback={null}>\n        <div className={s.homeWrap}>\n          {isDesktop && (\n            <div className={s.sideBar}>\n              <Sidebar />\n            </div>\n          )}\n\n          <div className={s.screenWrap}>\n            <Header />\n            {boards.length > 0 ? (\n              <Outlet />\n            ) : (\n              <Container className={s.containerWelcomeDashboard}>\n                <Outlet />\n                <WelcomePageBoard />\n              </Container>\n            )}\n          </div>\n        </div>\n\n        <div\n          className={clsx(s.sideBarBackDrop, isMobileOpen && s.showMobile)}\n          onClick={e => closeMobileOnBackdrop(e)}\n        >\n          <div className={s.sideBarOpen}>\n            <Sidebar />\n          </div>\n        </div>\n      </Suspense>\n    </>\n  );\n};\n\nexport default HomePage;\n"],"names":["OutsideClicker","props","ref","wrapperRef","useRef","setActive","isActive","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","children","SelectTheme","selectHandler","userTheme","setSelectedTheme","useState","handleClick","evtParent","currentTarget","parentElement","classList","toggle","themeCheckHandler","length","className","css","onClick","clsx","href","sprite","theme","innerText","toLowerCase","handleSelect","Profile","modalHandler","avatar","userAvatar","name","useSelector","selectName","src","alt","schema","yup","shape","min","max","required","email","password","ProfileModal","image","setImage","showPass","setShowPass","dispatch","useDispatch","userObj","selectUser","InitalVelues","formData","FormData","append","size","alert","updateAvatar","htmlFor","id","type","accept","placeholder","onChange","evt","files","initialValues","validationSchema","onSubmit","values","resetForm","updateUser","InputField","value","component","themes","dark","primaryBackground","secondaryBackground","headerBackground","primaryTextColor","secondaryTextColor","boardHeaders","btnBg","btnTextColor","selectHeader","selectOption","selectListBg","selectListBorder","modalBackground","btnModalIconPlus","btnModalBg","btnModalTextColor","cardBg","boardAddColumnBtn","boardAddColumnPlus","headerModalBtnAddFile","sidebarBoardActiveBg","sidebarHelpWrapperBg","sidebarButtonCreateBg","sidebarButtonIconPlus","sidebarBoardItemHover","sidebarTextColorMain","btnHoverMain","btnActiveMain","btnHoverSecondary","btnActiveSecondary","sidebarTextColorSecondary","priorityWithoutPriority","light","violet","root","querySelector","style","setProperty","Header","selectUserTheme","selectUserAvatar","selectAvatar","selectedTheme","isModalOpen","setIsModalOpen","switchTheme","toggleSidebar","Modal","title","closeModal","LogoComponent","st","Icon","width","height","initialsValue","icon","setIcon","bg","setBg","createNewBoard","background","s","RadioGroup","orientation","variant","sx","marginBottom","border","gap","map","item","Box","position","display","justifyContent","alignItems","Radio","disableIcon","overlay","label","colors","secondaryClassName","hexagon","project","container","lightnight","loading","puzzle","star","backgroundColor","slotProps","input","action","borderRadius","transition","lineHeight","flexWrap","defaultBg","BgIcon","defaultBgWhite","flowers","leaves","mountainsAndBalloon","nature","oceanAndYacht","orangePlanet","planets","rocksAndOcean","sakura","sky","skyBalloons","starsAndShine","trailerInTheCanyon","yacht","youngMonth","outline","zIndex","ButtonModalWithIcon","text","comment","obj","console","log","autoComplete","as","boardToEdit","currentBoardId","selectCurrentBoardId","updateBoardById","data","Sidebar","boards","selectBoards","isLoggedIn","currentBoard","navigate","useNavigate","addBoardModal","setAddBoardModal","needHelpModalOpen","setNeedHelpModalOpen","editBoardModal","setEditBoardModal","activeItemId","setActiveItemId","setBoardToEdit","getAllBoards","_id","newTitle","split","join","getBoardById","handleAddBoard","handleNeedHelp","handleEditBoardModal","el","currentClass","handleChangeActive","IconBtn","filter","deleteBoardById","cactus","secobdaryClassName","logOutUser","showModal","setShowModal","Filters","isDesktop","useMediaQuery","minWidth","isMobileOpen","selectIsSidebar","getAllTasks","Suspense","fallback","Container","e","closeMobileOnBackdrop"],"sourceRoot":""}