{"version":3,"file":"static/js/293.94e8b98e.chunk.js","mappings":"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","sources":["webpack://ITD-node-front-project/./src/components/Header/Header.module.scss?6eb7","webpack://ITD-node-front-project/./src/components/Header/SelectTheme/SelectTheme.module.scss?dc9e","components/Header/SelectTheme/OutsideClicker.jsx","components/Header/SelectTheme/SelectTheme.jsx","webpack://ITD-node-front-project/./src/components/Header/Profile/Profile.module.scss?b4dd","components/Header/Profile/Profile.jsx","webpack://ITD-node-front-project/./src/components/Header/ProfileModal/ProfileModal.module.scss?9b06","components/Header/ProfileModal/ProfileModal.jsx","services/themes.js","components/Header/Header.jsx","webpack://ITD-node-front-project/./src/components/LogoComponent/LogoComponent.module.scss?f9d9","components/LogoComponent/LogoComponent.jsx","webpack://ITD-node-front-project/./src/components/Forms/NeedHelp/NeedHelp.module.scss?7fbf","components/Forms/NeedHelp/NeedHelp.jsx","webpack://ITD-node-front-project/./src/components/Sidebar/Sidebar.module.scss?60bc","components/Forms/NewBoardAndEditBoard/EditBoard.jsx","components/Sidebar/Sidebar.jsx","webpack://ITD-node-front-project/./src/pages/HomePage/HomePage.module.scss?bae6","pages/HomePage/HomePage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"header\":\"Header_header__OKWO7\",\"container\":\"Header_container__TsUVY\",\"menu\":\"Header_menu__iSxy+\",\"icon\":\"Header_icon__a8FkJ\",\"modalContainer\":\"Header_modalContainer__GF0jM\"};","// extracted by mini-css-extract-plugin\nexport default {\"select\":\"SelectTheme_select__8wmg7\",\"selectContainer\":\"SelectTheme_selectContainer__7WLE1\",\"header\":\"SelectTheme_header__ZvlpG\",\"icon\":\"SelectTheme_icon__R1psC\",\"rotate\":\"SelectTheme_rotate__dNDwZ\",\"svg\":\"SelectTheme_svg__Hjzi-\",\"list\":\"SelectTheme_list__DAEHj\",\"active\":\"SelectTheme_active__l-6bo\",\"listItem\":\"SelectTheme_listItem__J0eR1\",\"current\":\"SelectTheme_current__DFjtF\"};","import React, { useEffect, useRef } from \"react\";\n\nexport function OutsideClicker(props) {\n  const wrapperRef = useRef(null);\n  // eslint-disable-next-line\n  let { isActive, setActive } = props;\n\n  function useOutsideAlerter(ref) {\n    useEffect(() => {\n      function handleClickOutside(event) {\n        if (ref.current && !ref.current.contains(event.target)) {\n            setActive((isActive = false));\n        }\n      }\n      document.addEventListener('mousedown', handleClickOutside);\n      return () => {\n        document.removeEventListener('mousedown', handleClickOutside);\n      };\n    }, [ref]);\n  }\n\n  useOutsideAlerter(wrapperRef);\n\n  return <div ref={wrapperRef}>{props.children}</div>;\n}","import clsx from 'clsx';\nimport css from './SelectTheme.module.scss';\nimport { useState } from \"react\";\nimport './SelectTheme.module.scss';\nimport sprite from '../../../assets/icons/icons.svg';\nimport { OutsideClicker } from './OutsideClicker';\nimport { selectTheme } from 'redux/auth/authSelectors';\nimport { useSelector } from 'react-redux';\n\nexport const SelectTheme = ({selectHandler, userTheme, setSelectedTheme}) => {\n    const [isActive, setActive] = useState(false);\n    const storedTheme = useSelector(selectTheme);\n    \n    const handleClick = (event) => {\n        const evtParent = event.currentTarget.parentElement;\n        evtParent.children[1].classList.toggle('active');\n        evtParent.children[0].children[1].classList.toggle('rotate');\n        \n        setActive(!isActive);\n    }\n\n    const handleSelect = (event) => {\n        const theme = event.target.innerText.toLowerCase();\n        setSelectedTheme(theme);\n        selectHandler(theme);\n    }\n\n    const themeCheckHandler = () => {\n        return storedTheme ? storedTheme : userTheme;\n    }\n\n    return (\n        <OutsideClicker isActive={isActive} setActive={setActive}>\n            <div className={css.container}>   \n                <div className={css.select}>\n                    <div className={css.selectContainer} onClick={handleClick}>\n                        <p className={css.header}>Theme</p>\n                        <div className={clsx(css.icon, [isActive && css.rotate])}>\n                            <svg className={css.svg}>\n                                <use href={sprite + '#icon-arrow-down'}></use>\n                            </svg>\n                        </div>\n                    </div>\n                    \n                    <ul className={clsx(css.list, [isActive && css.active])} \n                        onClick={event => {\n                            handleClick(event);\n                            handleSelect(event);\n                    }}>\n                        <li key={1} className={clsx({\n                            [css.listItem] : true,\n                            [css.current] : isActive && themeCheckHandler() === 'light'\n                        })}>\n                            <p>Light</p>\n                        </li>\n                        <li key={2} className={clsx({\n                            [css.listItem] : true,\n                            [css.current] : isActive && themeCheckHandler() === 'dark'\n                        })}>\n                            <p>Dark</p>\n                        </li>\n                        <li key={3} className={clsx({\n                            [css.listItem] : true,\n                            [css.current] : isActive && themeCheckHandler() === 'violet'\n                        })}>\n                            <p>Violet</p>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </OutsideClicker>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Profile_container__OBYQH\",\"name\":\"Profile_name__9EFSA\",\"avatarContainer\":\"Profile_avatarContainer__VuBqv\",\"svg\":\"Profile_svg__uWmy7\",\"img\":\"Profile_img__WBvF+\"};","import css from './Profile.module.scss';\nimport sprite from '../../../assets/icons/icons.svg';\nimport { useSelector } from 'react-redux';\nimport { selectName } from 'redux/auth/authSelectors';\n\nexport const Profile = ({ modalHandler, avatar, userAvatar }) => {\n    const name = useSelector(selectName);\n\n    const checkAvatar = () => {\n        if (avatar && avatar.length > 0) {\n            return avatar;\n        }\n        return userAvatar;\n    }\n\n// console.log('test', checkAvatar)\n    return (\n        <div className={css.container}>\n            <div className={css.tooltip}>\n                <p></p>\n            </div>\n            <p className={css.name}>{name}</p>\n            <div className={css.avatarContainer} onClick={modalHandler}>\n                {userAvatar.length === 0 && !avatar ? (\n                    <svg className={css.svg}>\n                        <use href={sprite + '#user-avatar-icon'}></use>\n                    </svg>\n                ) : (\n                    <img className={css.img} src={`${checkAvatar()}`} alt=\"Avatar\" />\n                )}\n            </div>\n        </div>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"ProfileModal_modal__uUk-c\",\"header\":\"ProfileModal_header__p2Gkw\",\"imageContainer\":\"ProfileModal_imageContainer__TkbH5\",\"svg\":\"ProfileModal_svg__R5DnF\",\"image\":\"ProfileModal_image__riVrJ\",\"addImg\":\"ProfileModal_addImg__7yF92\",\"label\":\"ProfileModal_label__anism\",\"labelSvg\":\"ProfileModal_labelSvg__p6IXF\",\"addFile\":\"ProfileModal_addFile__amgiz\",\"form\":\"ProfileModal_form__G4XtV\",\"input\":\"ProfileModal_input__Bkn-5\",\"button\":\"ProfileModal_button__N+D4X\"};","import { useEffect, useState } from 'react';\nimport { Formik, Form } from 'formik';\nimport InputField from 'shared/components/InputField/InputField';\nimport * as yup from 'yup';\nimport css from './ProfileModal.module.scss';\nimport { useDispatch } from 'react-redux';\nimport { updateUser, updateAvatar } from 'redux/auth/authOperations';\nimport sprite from '../../../assets/icons/icons.svg';\n\nconst schema = yup.object().shape({\n  name: yup\n    .string()\n    .min(2, 'Username must be at least 2 characters')\n    .max(64, 'Username must be less than or equal to 64 characters')\n    .required('Username is a required field'),\n  email: yup\n    .string()\n    .email('Email must be a valid email')\n    .min(3, 'Email must be at least 3 characters')\n    .max(64, 'Email must be less than or equal to 64 characters')\n    .required('Email is a required field'),\n  password: yup\n    .string()\n    .min(8, 'Password must be at least 8 characters')\n    .max(64, 'Password must be less than or equal to 64 characters')\n    .required('Password is a required field'),\n});\n\nconst InitalVelues = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nexport const ProfileModal = ({ modalHandler, avatar, userAvatar }) => {\n  const [image, setImage] = useState(null);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (image) {\n      const formData = new FormData();\n      formData.append('avatar', image);\n\n      if(image.size > 1040000) return alert('Maximum image size is 1MB');\n\n      dispatch(updateAvatar(formData));\n      setImage(null);\n    }\n  }, [image, dispatch]);\n\n  const submitHandler = (values, { resetForm }) => {\n    dispatch(\n      updateUser({\n        name: values.name,\n        email: values.email,\n        password: values.password,\n      })\n    );\n\n    resetForm();\n    modalHandler();\n  };\n\n  const handleFileSelect = evt => {\n    setImage(evt.target.files[0]);\n  };\n\n  const checkAvatar = () => {\n    if (avatar && avatar.length > 0) {\n        return avatar;\n    }\n    return userAvatar;\n  }\n\n  return (\n    <div className={css.modal}>\n      <div className={css.imageContainer}>\n        {userAvatar.length === 0 && !avatar ? (\n          <svg className={css.svg}>\n            <use href={sprite + '#user-avatar-icon'}></use>\n          </svg>\n        ) : (\n          <div className={css.image}>\n            <img className={css.img} src={checkAvatar()} alt=\"Avatar\" />\n          </div>\n        )}\n        <div className={css.addImg}>\n          <label className={css.label} htmlFor=\"inputAddFile\">\n            <svg className={css.labelSvg}>\n                <use href={sprite + \"#icon-btn-plus\"}></use>\n            </svg>\n          </label>\n          <input\n            className={css.addFile}\n            id=\"inputAddFile\"\n            type=\"file\"\n            accept=\"image/png, image/jpeg\"\n            placeholder=\"\"\n            onChange={handleFileSelect}\n          />\n        </div>\n      </div>\n\n      <Formik\n        initialValues={InitalVelues}\n        validationSchema={schema}\n        onSubmit={submitHandler}\n      >\n        <Form>\n          <InputField name=\"name\" placeholder=\"Enter name\" />\n          <InputField name=\"email\" placeholder=\"Enter email\" />\n          <InputField name=\"password\" placeholder=\"Enter password\" />\n          <button className={css.button} type=\"submit\">\n            Send\n          </button>\n        </Form>\n      </Formik>\n    </div>\n  );\n};\n","export let themes = {\n    dark: {\n        primaryBackground: '#121212',\n        secondaryBackground: '#1F1F1F',\n        headerBackground: '#161616',\n        primaryTextColor: '#FFFFFF',\n        secondaryTextColor: 'rgba(255, 255, 255, 0.5)',\n        boardHeaders: '#FFFFFF',\n        btnBg: '#BEDBB0',\n        btnTextColor: '#121212',\n        selectHeader: 'rgba(255, 255, 255, 0.8)',\n        selectOption: 'rgba(255, 255, 255, 0.5)',\n        selectListBg: '#151515',\n        selectListBorder: '#BEDBB0',\n        modalBackground: '#151515',\n        btnModalIconPlus: '#FFFFFF',\n        btnModalBg: \"#161616\",\n        btnModalTextColor: \"#161616\",\n        cardBg: \"#121212\",\n        boardAddColumnBtn: \"#FFFFFF\",\n        boardAddColumnPlus: \"#121212\",\n        headerModalBtnAddFile: \"#BEDBB0\"\n    },\n    light: {\n        primaryBackground: '#FFFFFF',\n        secondaryBackground: '#F6F6F7',\n        headerBackground: '#FCFCFC',\n        primaryTextColor: '#161616',\n        secondaryTextColor: 'rgba(22, 22, 22, 0.5)',\n        boardHeaders: '#161616B2',\n        btnBg: '#BEDBB0',\n        btnTextColor: '#161616',\n        selectHeader: 'rgba(160, 160, 160, 0.8)',\n        selectOption: '#161616',\n        selectListBg: '#FCFCFC',\n        selectListBorder: '#BEDBB0',\n        modalBackground: '#FCFCFC',\n        btnModalIconPlus: '#FFFFFF',\n        btnModalBg: \"#161616\",\n        cardBg: \"#FFFFFF\",\n        boardAddColumnBtn: \"#121212\",\n        boardAddColumnPlus: \"#FFFFFF\",\n        headerModalBtnAddFile: \"#BEDBB0\"\n    },\n    violet: {\n        primaryBackground: '#5255BC',\n        secondaryBackground: '#ECEDFD',\n        headerBackground: '#FFFFFF',\n        primaryTextColor: '#161616',\n        secondaryTextColor: 'rgba(22, 22, 22, 0.5)',\n        boardHeaders: '#161616',\n        btnBg: '#5255BC',\n        btnTextColor: '#FFFFFF',\n        selectHeader: 'rgba(160, 160, 160, 0.8)',\n        selectOption: '#161616',\n        selectListBg: '#FCFCFC',\n        selectListBorder: '#ECEDFD',\n        modalBackground: '#FCFCFC',\n        btnModalIconPlus: '#161616',\n        btnModalBg: \"#FFFFFF\",\n        cardBg: \"#FFFFFF\",\n        boardAddColumnBtn: \"#5255BC\",\n        boardAddColumnPlus: \"#FFFFFF\",\n        headerModalBtnAddFile: \"#ECEDFD\"\n    }\n}","import css from './Header.module.scss';\nimport { SelectTheme } from \"./SelectTheme/SelectTheme\";\nimport { Profile } from \"./Profile/Profile\";\nimport { ProfileModal } from \"./ProfileModal/ProfileModal\";\n\nimport { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { \n    selectUserTheme, \n    selectTheme,\n    selectAvatar,\n    selectUserAvatar, \n} from 'redux/auth/authSelectors';\nimport Modal from 'components/Modal/Modal';\nimport { useDispatch } from 'react-redux';\nimport { switchTheme, toggleSidebar } from 'redux/auth/authOperations';\nimport sprite from '../../assets/icons/icons.svg';\nimport {themes} from '../../services/themes'\n\nexport const Header = () => {\n    const userTheme = useSelector(selectUserTheme);\n    const storeTheme = useSelector(selectTheme)\n    const userAvatar = useSelector(selectUserAvatar);\n    const avatar = useSelector(selectAvatar)\n    const [selectedTheme, setSelectedTheme] = useState(null);\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const dispatch = useDispatch();\n    \n    useEffect(()=> {\n        if (userTheme && storeTheme === null) selectHandler(userTheme);\n        if (selectedTheme) {\n            // console.log('useEffect if', selectedTheme)\n            selectHandler(selectedTheme);\n            dispatch(switchTheme(selectedTheme));\n        }\n        return;\n    }, [selectedTheme, userTheme, dispatch, userAvatar, storeTheme]); \n\n    const selectHandler = (theme) => {\n        const root = document.querySelector(':root');\n\n        root.style.setProperty('--primary-background', themes[theme].primaryBackground);\n        root.style.setProperty('--secondary-background', themes[theme].secondaryBackground );\n        root.style.setProperty('--header-background', themes[theme].headerBackground);\n        root.style.setProperty('--primary-text-color', themes[theme].primaryTextColor);\n        root.style.setProperty('--secondary-text-color', themes[theme].secondaryTextColor);\n        root.style.setProperty('--board-headers', themes[theme].boardHeaders);\n        root.style.setProperty('--btn-bg', themes[theme].btnBg);\n        root.style.setProperty('--btn-text-color', themes[theme].btnTextColor);\n        root.style.setProperty('--select-header', themes[theme].selectHeader);\n        root.style.setProperty('--select-option', themes[theme].selectOption);\n        root.style.setProperty('--select-list-bg', themes[theme].selectListBg);\n        root.style.setProperty('--select-list-border', themes[theme].selectListBorder);\n        root.style.setProperty('--modal-background', themes[theme].modalBackground);\n        root.style.setProperty('--btn-modal-icon-plus', themes[theme].btnModalIconPlus);\n        root.style.setProperty('--btn-modal-bg', themes[theme].btnModalBg);\n        root.style.setProperty('--btn-modal-text-color', themes[theme].btnModalTextColor);\n        root.style.setProperty('--card-bg', themes[theme].cardBg);\n        root.style.setProperty('--board-add-column-btn', themes[theme].boardAddColumnBtn);\n        root.style.setProperty('--board-add-column-plus', themes[theme].boardAddColumnPlus);\n        root.style.setProperty('--header-modal-btn-add-file', themes[theme].headerModalBtnAddFile);\n        \n        // setSelectedTheme(theme);\n    }\n\n    const modalHandler = () => setIsModalOpen(!isModalOpen);\n\n    return (\n        // <Container>\n            <header className={css.header}>\n                <div className={css.menu} onClick={() => dispatch(toggleSidebar(true))}>\n                    <svg className={css.icon}>\n                        <use href={sprite + '#icon-burger-menu'}></use>\n                    </svg>\n                </div>\n                <div className={css.container}>\n                    <SelectTheme \n                        selectHandler={selectHandler} \n                        userTheme={userTheme} \n                        selectedTheme={selectedTheme}\n                        setSelectedTheme={setSelectedTheme}\n                    >\n\n                    </SelectTheme>\n                    <Profile \n                        modalHandler={modalHandler} \n                        avatar={avatar} \n                        userAvatar={userAvatar}\n                    >\n                    </Profile>\n                </div>\n                {isModalOpen && <Modal title={'Edit profile'} closeModal={modalHandler}>\n                    <ProfileModal \n                        modalHandler={modalHandler} \n                        avatar={avatar} \n                        userAvatar={userAvatar}\n                        >    \n                    </ProfileModal>\n                </Modal>}\n            </header>\n        // </Container>\n        \n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"icon\":\"LogoComponent_icon__K3ESn\"};","import Icon from 'components/Icon/Icon';\nimport st from './LogoComponent.module.scss';\nexport const LogoComponent = () => {\n  return (\n    <div className={st.icon}>\n      <Icon name={'icon-iconlogo'} width={32} height={32} />\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"NeedHelp_title__84d0P\",\"label\":\"NeedHelp_label__3X2O7\",\"textarea\":\"NeedHelp_textarea__+QoR6\",\"errorMessage\":\"NeedHelp_errorMessage__YwA2C\",\"button\":\"NeedHelp_button__lgwfC\"};","import { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport InputField from 'shared/components/InputField/InputField';\nimport s from './NeedHelp.module.scss';\nconst schema = yup.object().shape({\n  email: yup\n    .string()\n    .email('Email must be a valid email')\n    .min(3, 'Email must be at least 3 characters')\n    .max(64, 'Email must be less than or equal to 64 characters')\n    .required('Email is a required field'),\n  comment: yup.string().required('Comment is a required field'),\n});\n\nconst initialValues = {\n  email: '',\n  comment: '',\n};\n\nconst NeedHelp = ({ closeModal }) => {\n  const hendleSubmit = (values, { resetForm }) => {\n    const obj = {\n      email: values.email,\n      comment: values.comment,\n    };\n    console.log(obj);\n    closeModal();\n    resetForm();\n  };\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={hendleSubmit}\n    >\n      <Form autoComplete=\"off\">\n        <InputField name=\"email\" placeholder=\"Email address\" />\n        <label className={s.label}>\n          <Field\n            as=\"textarea\"\n            name=\"comment\"\n            placeholder=\"Comment\"\n            className={s.textarea}\n          />\n          <ErrorMessage\n            name=\"comment\"\n            component=\"span\"\n            className={s.errorMessage}\n          />\n        </label>\n        <button type=\"submit\" className={s.button}>\n          Send\n        </button>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default NeedHelp;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Sidebar_container__tRE6e\",\"sectionTop\":\"Sidebar_sectionTop__kXrut\",\"logoWrap\":\"Sidebar_logoWrap__fIZIy\",\"logoText\":\"Sidebar_logoText__j+pLJ\",\"boardsTitle\":\"Sidebar_boardsTitle__EnqDF\",\"createBoard\":\"Sidebar_createBoard__Vww8s\",\"buttonCreate\":\"Sidebar_buttonCreate__5kUMF\",\"sectionBoards\":\"Sidebar_sectionBoards__iwH2u\",\"boardsList\":\"Sidebar_boardsList__n6qaq\",\"boardItem\":\"Sidebar_boardItem__-Gzo2\",\"boardItemActive\":\"Sidebar_boardItemActive__MHmWx Sidebar_boardItem__-Gzo2\",\"boardName\":\"Sidebar_boardName__o2iew\",\"boardEditIcons\":\"Sidebar_boardEditIcons__6bzF5\",\"helpWrapper\":\"Sidebar_helpWrapper__bCJj5\",\"helpSend\":\"Sidebar_helpSend__ZNI1k\",\"helpText\":\"Sidebar_helpText__YwZd4\",\"btnLogout\":\"Sidebar_btnLogout__FPSmN\"};","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Formik, Form } from 'formik';\nimport * as yup from 'yup';\nimport clsx from 'clsx';\nimport Box from '@mui/joy/Box';\nimport Radio from '@mui/joy/Radio';\nimport RadioGroup from '@mui/joy/RadioGroup';\nimport InputField from 'shared/components/InputField/InputField';\nimport Icon from '../../Icon/Icon';\nimport ButtonModalWithIcon from 'components/Modal/ButtonModalWithIcon';\nimport BgIcon from './BgIcon';\nimport { updateBoardById } from 'redux/board/boardOperations';\nimport { selectCurrentBoardId } from 'redux/board/boardSelectors';\nimport s from './NewBoard.module.scss';\n\nimport defaultBg from '../../../static/images/bgIcons/defaultBg.png';\nimport flowers from '../../../static/images/bgIcons/flowers.png';\nimport leaves from '../../../static/images/bgIcons/leaves.png';\nimport mountainsAndBalloon from '../../../static/images/bgIcons/mountainsAndBalloon.png';\nimport nature from '../../../static/images/bgIcons/nature.png';\nimport oceanAndYacht from '../../../static/images/bgIcons/oceanAndYacht.png';\nimport orangePlanet from '../../../static/images/bgIcons/orangePlanet.png';\nimport planets from '../../../static/images/bgIcons/planets.png';\nimport rocksAndOcean from '../../../static/images/bgIcons/rocksAndOcean.png';\nimport sakura from '../../../static/images/bgIcons/sakura.png';\nimport sky from '../../../static/images/bgIcons/sky.png';\nimport skyBalloons from '../../../static/images/bgIcons/skyBalloons.png';\nimport starsAndShine from '../../../static/images/bgIcons/starsAndShine.png';\nimport trailerInTheCanyon from '../../../static/images/bgIcons/trailerInTheCanyon.png';\nimport yacht from '../../../static/images/bgIcons/yacht.png';\nimport youngMonth from '../../../static/images/bgIcons/youngMonth.png';\n\nconst schema = yup.object().shape({\n  title: yup.string().required('Title is a required field'),\n});\n\nconst EditBoard = ({ closeModal, boardToEdit }) => {\n  const [icon, setIcon] = useState(boardToEdit[0].icon);\n  const [bg, setBg] = useState(boardToEdit[0].background);\n  const currentBoardId = useSelector(selectCurrentBoardId);\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(\n      updateBoardById({\n        id: currentBoardId,\n        data: {\n          title: values.title,\n          icon: icon,\n          background: bg,\n        },\n      })\n    );\n    closeModal();\n    resetForm();\n  };\n\n  return (\n    <Formik\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n      initialValues={{ title: boardToEdit[0].title }}\n    >\n      <Form>\n        <InputField\n          name=\"title\"\n          placeholder=\"Title\"\n          value={boardToEdit[0].title}\n        />\n        <div>\n          <p className={s.title}>Icons</p>\n          <RadioGroup\n            orientation=\"horizontal\"\n            aria-label=\"Icons\"\n            name=\"icons\"\n            variant=\"outlined\"\n            value={icon}\n            onChange={event => setIcon(event.target.value)}\n            sx={{\n              marginBottom: '24px',\n              border: 'none',\n              gap: '8px',\n            }}\n          >\n            {[\n              'colors',\n              'hexagon',\n              'project',\n              'container',\n              'lightnight',\n              'loading',\n              'puzzle',\n              'star',\n            ].map(item => (\n              <Box\n                key={item}\n                sx={{\n                  position: 'relative',\n                  display: 'flex',\n                  justifyContent: 'center',\n                  alignItems: 'center',\n                }}\n              >\n                <Radio\n                  value={item}\n                  disableIcon\n                  overlay\n                  name=\"icons\"\n                  label={\n                    {\n                      colors: (\n                        <Icon\n                          name=\"colors\"\n                          width={18}\n                          height={18}\n                          secondaryClassName={clsx(\n                            s.svgIcon,\n                            icon === 'colors' && s.activeSvgIcon\n                          )}\n                        />\n                      ),\n                      hexagon: (\n                        <Icon\n                          name=\"hexagon\"\n                          width={18}\n                          height={18}\n                          secondaryClassName={clsx(\n                            s.svgIcon,\n                            icon === 'hexagon' && s.activeSvgIcon\n                          )}\n                        />\n                      ),\n                      project: (\n                        <Icon\n                          name=\"project\"\n                          width={18}\n                          height={18}\n                          secondaryClassName={clsx(\n                            s.svgIcon,\n                            icon === 'project' && s.activeSvgIcon\n                          )}\n                        />\n                      ),\n                      container: (\n                        <Icon\n                          name=\"container\"\n                          width={18}\n                          height={18}\n                          secondaryClassName={clsx(\n                            s.svgIcon,\n                            icon === 'container' && s.activeSvgIcon\n                          )}\n                        />\n                      ),\n                      lightnight: (\n                        <Icon\n                          name=\"lightnight\"\n                          width={18}\n                          height={18}\n                          secondaryClassName={clsx(\n                            s.svgIcon,\n                            icon === 'lightnight' && s.activeSvgIcon\n                          )}\n                        />\n                      ),\n                      loading: (\n                        <Icon\n                          name=\"loading\"\n                          width={18}\n                          height={18}\n                          secondaryClassName={clsx(\n                            s.svgIcon,\n                            icon === 'loading' && s.activeSvgIcon\n                          )}\n                        />\n                      ),\n                      puzzle: (\n                        <Icon\n                          name=\"puzzle\"\n                          width={18}\n                          height={18}\n                          secondaryClassName={clsx(\n                            s.svgIcon,\n                            icon === 'puzzle' && s.activeSvgIcon\n                          )}\n                        />\n                      ),\n                      star: (\n                        <Icon\n                          name=\"star\"\n                          width={18}\n                          height={18}\n                          secondaryClassName={clsx(\n                            s.svgIcon,\n                            icon === 'star' && s.activeSvgIcon\n                          )}\n                        />\n                      ),\n                    }[item]\n                  }\n                  variant={icon === item ? 'solid' : 'plain'}\n                  sx={{\n                    '& .Joy-checked': {\n                      backgroundColor: 'transparent',\n                    },\n                    '& .MuiRadio-label': {\n                      width: '18px',\n                      height: '18px',\n                    },\n                  }}\n                  slotProps={{\n                    input: { 'aria-label': item },\n                    action: {\n                      sx: {\n                        '&:hover': {\n                          backgroundColor: 'transparent',\n                        },\n                        borderRadius: 0,\n                        transition: 'none',\n                      },\n                    },\n                    label: { sx: { lineHeight: 0 } },\n                  }}\n                />\n              </Box>\n            ))}\n          </RadioGroup>\n        </div>\n        <div>\n          <p className={s.title}>Background</p>\n          <RadioGroup\n            orientation=\"horizontal\"\n            aria-label=\"Backgrounds\"\n            name=\"background\"\n            variant=\"outlined\"\n            value={bg}\n            onChange={event => setBg(event.target.value)}\n            sx={{\n              flexWrap: 'wrap',\n              width: '260px',\n              marginBottom: '24px',\n              border: 'none',\n              gap: '4px',\n            }}\n          >\n            {[\n              'defaultBg',\n              'flowers',\n              'leaves',\n              'mountainsAndBallon',\n              'nature',\n              'oceanAndYacht',\n              'orangePlanet',\n              'planets',\n              'rocksAndOcean',\n              'sakura',\n              'sky',\n              'skyBalloons',\n              'starsAndShine',\n              'trailerInTheCanyon',\n              'yacht',\n              'youngMonth',\n            ].map(item => (\n              <Box\n                key={item}\n                sx={{\n                  position: 'relative',\n                  display: 'flex',\n                  justifyContent: 'center',\n                  alignItems: 'center',\n                }}\n              >\n                <Radio\n                  value={item}\n                  disableIcon\n                  overlay\n                  name=\"background\"\n                  label={\n                    {\n                      defaultBg: <BgIcon name={defaultBg} alt={defaultBg} />,\n                      flowers: <BgIcon name={flowers} alt={flowers} />,\n                      leaves: <BgIcon name={leaves} alt={leaves} />,\n                      mountainsAndBallon: (\n                        <BgIcon\n                          name={mountainsAndBalloon}\n                          alt={mountainsAndBalloon}\n                        />\n                      ),\n                      nature: <BgIcon name={nature} alt={nature} />,\n                      oceanAndYacht: (\n                        <BgIcon name={oceanAndYacht} alt={oceanAndYacht} />\n                      ),\n                      orangePlanet: (\n                        <BgIcon name={orangePlanet} alt={orangePlanet} />\n                      ),\n                      planets: <BgIcon name={planets} alt={planets} />,\n\n                      rocksAndOcean: (\n                        <BgIcon name={rocksAndOcean} alt={rocksAndOcean} />\n                      ),\n                      sakura: <BgIcon name={sakura} alt={sakura} />,\n                      sky: <BgIcon name={sky} alt={sky} />,\n                      skyBalloons: (\n                        <BgIcon name={skyBalloons} alt={skyBalloons} />\n                      ),\n                      starsAndShine: (\n                        <BgIcon name={starsAndShine} alt={starsAndShine} />\n                      ),\n                      trailerInTheCanyon: (\n                        <BgIcon\n                          name={trailerInTheCanyon}\n                          alt={trailerInTheCanyon}\n                        />\n                      ),\n                      yacht: <BgIcon name={yacht} alt={yacht} />,\n                      youngMonth: <BgIcon name={youngMonth} alt={youngMonth} />,\n                    }[item]\n                  }\n                  variant={bg === item ? 'solid' : 'plain'}\n                  sx={{\n                    '& .Joy-checked': {\n                      backgroundColor: 'transparent',\n                      outline: '2px solid white',\n                      borderRadius: '6px',\n                      zIndex: '99',\n                    },\n                  }}\n                  slotProps={{\n                    input: { 'aria-label': item },\n                    action: {\n                      sx: {\n                        '&:hover': {\n                          backgroundColor: 'transparent',\n                        },\n                        borderRadius: 0,\n                        transition: 'none',\n                      },\n                    },\n                    label: { sx: { lineHeight: 0 } },\n                  }}\n                />\n              </Box>\n            ))}\n          </RadioGroup>\n        </div>\n\n        <ButtonModalWithIcon text=\"Edit\" />\n      </Form>\n    </Formik>\n  );\n};\n\nexport default EditBoard;\n","import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\n// import { Button } from '@mui/material';\nimport cactus from '../../static/images/cactus.png';\nimport { LogoComponent } from 'components/LogoComponent/LogoComponent';\nimport NewBoard from 'components/Forms/NewBoardAndEditBoard/NewBoardForm';\nimport NeedHelp from 'components/Forms/NeedHelp/NeedHelp';\nimport Modal from 'components/Modal/Modal';\nimport Icon from 'components/Icon/Icon';\nimport { logOutUser } from 'redux/auth/authOperations';\nimport st from './Sidebar.module.scss';\nimport {\n  deleteBoardById,\n  getAllBoards,\n  getBoardById,\n} from 'redux/board/boardOperations';\nimport EditBoard from 'components/Forms/NewBoardAndEditBoard/EditBoard';\nimport { selectBoards, selectCurrentBoardId } from 'redux/board/boardSelectors';\nimport { selectName } from 'redux/auth/authSelectors';\n\nexport const Sidebar = () => {\n  const boards = useSelector(selectBoards);\n  const isLoggedIn = useSelector(selectName);\n  const currentBoard = useSelector(selectCurrentBoardId);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [addBoardModal, setAddBoardModal] = useState(false);\n  const [needHelpModalOpen, setNeedHelpModalOpen] = useState(false);\n  const [editBoardModal, setEditBoardModal] = useState(false);\n  const [activeItemId, setActiveItemId] = useState(null);\n  const [boardToEdit, setBoardToEdit] = useState(null);\n  // console.log(isLoggedIn);\n\n  useEffect(() => {\n    isLoggedIn && dispatch(getAllBoards());\n  }, [dispatch, isLoggedIn]);\n\n  useEffect(() => {\n    if (boards.length === 0) {\n      return;\n    }\n    if (!currentBoard) {\n      setActiveItemId(boards[0]._id);\n      const newTitle = boards[0].title.split(' ').join('-').toLowerCase();\n      navigate(`/home/${newTitle}`);\n    }\n  }, [boards, currentBoard, navigate]);\n\n  useEffect(() => {\n    dispatch(getBoardById(activeItemId));\n  }, [activeItemId, dispatch]);\n\n  const handleAddBoard = () => setAddBoardModal(!addBoardModal);\n\n  const handleNeedHelp = () => setNeedHelpModalOpen(!needHelpModalOpen);\n\n  const handleEditBoardModal = () => setEditBoardModal(!editBoardModal);\n\n  const handleChangeActive = (id, title) => {\n    setActiveItemId(id);\n\n    const newTitle = title.split(' ').join('-').toLowerCase();\n    navigate(`/home/${newTitle}`);\n  };\n\n  const handleEditBoard = id => {\n    setBoardToEdit(boards.filter(el => el._id === currentBoard));\n    handleEditBoardModal();\n  };\n\n  const handleDeleteBoard = id => {\n    dispatch(deleteBoardById(id));\n    dispatch(getBoardById(null));\n  };\n\n  const handleLogout = () => {\n    dispatch(logOutUser());\n  };\n  return (\n    <nav>\n      <section className={st.sectionTop}>\n        <div className={st.container}>\n          <div className={st.logoWrap}>\n            <LogoComponent />\n            <p className={st.logoText}>Task Pro</p>\n          </div>\n\n          <p className={st.boardsTitle}>My boards</p>\n          <div className={st.createBoard}>\n            <p>Create a new board</p>\n            <button\n              type=\"button\"\n              className={st.buttonCreate}\n              onClick={handleAddBoard}\n            >\n              <Icon name={'icon-btn-plus'} width={20} height={20} />\n            </button>\n          </div>\n        </div>\n      </section>\n      <section className={st.sectionBoards}>\n        <ul className={st.boardsList}>\n          {boards?.map(el => {\n            const currentClass =\n              el._id === activeItemId ? st.boardItemActive : st.boardItem;\n            return (\n              <li\n                key={el._id}\n                className={currentClass}\n                onClick={() => handleChangeActive(el._id, el.title)}\n              >\n                <div className={st.boardName}>\n                  <Icon\n                    name={el.icon}\n                    width={18}\n                    height={18}\n                    className={st.boardIcon}\n                  />\n                  <p>{el.title}</p>\n                </div>\n                {el._id === activeItemId && (\n                  <>\n                    <div className={st.boardEditIcons}>\n                      <div\n                        className={st.boardButtons}\n                        onClick={() => handleEditBoard(el._id)}\n                      >\n                        <Icon name={'icon-pencil'} width={16} height={16} />\n                      </div>\n                      <div\n                        className={st.boardButtons}\n                        onClick={() => handleDeleteBoard(el._id)}\n                      >\n                        <Icon name={'icon-trash'} width={16} height={16} />\n                      </div>\n                    </div>\n                  </>\n                )}\n              </li>\n            );\n          })}\n        </ul>\n      </section>\n      <section className={st.sectionHelp}>\n        <div className={st.container}>\n          <div className={st.helpWrapper}>\n            <img src={cactus} alt=\"cactus\" className={st.helpCactus} />\n            <p className={st.helpText}>\n              If you need help with <br />\n              <span> TaskPro</span>, check out our support resources or reach\n              out to our customer support team.\n            </p>\n            <button className={st.helpSend} onClick={handleNeedHelp}>\n              <Icon name={'icon-help-circle'} width={20} height={20} />\n              Need help?\n            </button>\n          </div>\n        </div>\n      </section>\n      <section className={st.sectionLogOut}>\n        <div className={st.container}>\n          <button className={st.btnLogout} onClick={handleLogout}>\n            <Icon name={'icon-iconlogout'} width={32} height={32} />\n            Log out\n          </button>\n        </div>\n      </section>\n      {addBoardModal && (\n        <Modal title={'New board'} closeModal={handleAddBoard}>\n          <NewBoard closeModal={handleAddBoard} />\n        </Modal>\n      )}\n      {needHelpModalOpen && (\n        <Modal title=\"Need help\" closeModal={handleNeedHelp}>\n          <NeedHelp closeModal={handleNeedHelp} />\n        </Modal>\n      )}\n      {editBoardModal && (\n        <Modal title=\"Edit board\" closeModal={handleEditBoardModal}>\n          <EditBoard\n            closeModal={handleEditBoardModal}\n            boardToEdit={boardToEdit}\n          />\n        </Modal>\n      )}\n    </nav>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"hidden\":\"HomePage_hidden__zxuF6\",\"sideBarBackDrop\":\"HomePage_sideBarBackDrop__b987A\",\"sideBar\":\"HomePage_sideBar__W15jR\",\"sideBarOpen\":\"HomePage_sideBarOpen__V9qKB HomePage_sideBar__W15jR\",\"homeWrap\":\"HomePage_homeWrap__4oaan\",\"screenWrap\":\"HomePage_screenWrap__vfEGW\"};","import { Outlet } from 'react-router-dom';\nimport { Suspense, useEffect, useState } from 'react';\nimport { Header } from 'components/Header/Header';\nimport { Sidebar } from 'components/Sidebar/Sidebar';\nimport s from './HomePage.module.scss';\nimport { useDispatch } from 'react-redux';\nimport { getAllTasks } from 'redux/board/boardOperations';\n\nconst HomePage = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getAllTasks())\n  },[dispatch])\n  \n  const [openMobile, setOpenMobile] = useState(false);\n  \n  const closeMobileOnBackdrop = e => {\n    if (e.target === e.currentTarget) {\n      console.log(e);\n      setOpenMobile(false);\n    }\n  };\n  const backDropClass = openMobile ? s.sideBarBackDrop : s.hidden;\n  const sideBarClass = openMobile ? s.sideBarOpen : s.sideBar;\n  return (\n    <>\n      <Suspense fallback={null}>\n        <div className={s.homeWrap}>\n          <div\n            className={backDropClass}\n            onClick={e => closeMobileOnBackdrop(e)}\n          >\n            <div className={sideBarClass}>\n              <Sidebar />\n            </div>\n          </div>\n          <div className={s.screenWrap}>\n            <Header />\n            <Outlet />\n          </div>\n        </div>\n      </Suspense>\n    </>\n  );\n};\n\nexport default HomePage;\n"],"names":["OutsideClicker","props","ref","wrapperRef","useRef","setActive","isActive","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","children","SelectTheme","selectHandler","userTheme","setSelectedTheme","useState","storedTheme","useSelector","selectTheme","handleClick","evtParent","currentTarget","parentElement","classList","toggle","themeCheckHandler","className","css","onClick","clsx","href","sprite","theme","innerText","toLowerCase","handleSelect","Profile","modalHandler","avatar","userAvatar","name","selectName","length","src","alt","schema","yup","shape","min","max","required","email","password","InitalVelues","ProfileModal","image","setImage","dispatch","useDispatch","formData","FormData","append","size","alert","updateAvatar","htmlFor","id","type","accept","placeholder","onChange","evt","files","initialValues","validationSchema","onSubmit","values","resetForm","updateUser","InputField","themes","dark","primaryBackground","secondaryBackground","headerBackground","primaryTextColor","secondaryTextColor","boardHeaders","btnBg","btnTextColor","selectHeader","selectOption","selectListBg","selectListBorder","modalBackground","btnModalIconPlus","btnModalBg","btnModalTextColor","cardBg","boardAddColumnBtn","boardAddColumnPlus","headerModalBtnAddFile","light","violet","Header","selectUserTheme","storeTheme","selectUserAvatar","selectAvatar","selectedTheme","isModalOpen","setIsModalOpen","switchTheme","root","querySelector","style","setProperty","toggleSidebar","Modal","title","closeModal","LogoComponent","st","Icon","width","height","comment","obj","console","log","autoComplete","s","as","component","boardToEdit","icon","setIcon","background","bg","setBg","currentBoardId","selectCurrentBoardId","updateBoardById","data","value","RadioGroup","orientation","variant","sx","marginBottom","border","gap","map","item","Box","position","display","justifyContent","alignItems","Radio","disableIcon","overlay","label","colors","secondaryClassName","hexagon","project","container","lightnight","loading","puzzle","star","backgroundColor","slotProps","input","action","borderRadius","transition","lineHeight","flexWrap","defaultBg","BgIcon","flowers","leaves","mountainsAndBallon","mountainsAndBalloon","nature","oceanAndYacht","orangePlanet","planets","rocksAndOcean","sakura","sky","skyBalloons","starsAndShine","trailerInTheCanyon","yacht","youngMonth","outline","zIndex","ButtonModalWithIcon","text","Sidebar","boards","selectBoards","isLoggedIn","currentBoard","navigate","useNavigate","addBoardModal","setAddBoardModal","needHelpModalOpen","setNeedHelpModalOpen","editBoardModal","setEditBoardModal","activeItemId","setActiveItemId","setBoardToEdit","getAllBoards","_id","newTitle","split","join","getBoardById","handleAddBoard","handleNeedHelp","handleEditBoardModal","el","currentClass","handleChangeActive","filter","deleteBoardById","cactus","logOutUser","getAllTasks","openMobile","setOpenMobile","backDropClass","sideBarClass","Suspense","fallback","e","closeMobileOnBackdrop"],"sourceRoot":""}